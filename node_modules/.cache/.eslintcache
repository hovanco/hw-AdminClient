[{"/Users/mac3/Desktop/workspace/AdminClient/src/index.tsx":"1","/Users/mac3/Desktop/workspace/AdminClient/src/serviceWorker.ts":"2","/Users/mac3/Desktop/workspace/AdminClient/src/App.tsx":"3","/Users/mac3/Desktop/workspace/AdminClient/src/state/store.ts":"4","/Users/mac3/Desktop/workspace/AdminClient/src/state/root-reducer.ts":"5","/Users/mac3/Desktop/workspace/AdminClient/src/routes/index.tsx":"6","/Users/mac3/Desktop/workspace/AdminClient/src/api/token.ts":"7","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/storeSlide.ts":"8","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/fanpageSlide.ts":"9","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/state/authSlide.ts":"10","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/ordersSlide.ts":"11","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/userSlide.ts":"12","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/billingSlide.ts":"13","/Users/mac3/Desktop/workspace/AdminClient/src/routes/hoc-router.tsx":"14","/Users/mac3/Desktop/workspace/AdminClient/src/components/index.ts":"15","/Users/mac3/Desktop/workspace/AdminClient/src/api/fanpage-api.ts":"16","/Users/mac3/Desktop/workspace/AdminClient/src/api/store-api.ts":"17","/Users/mac3/Desktop/workspace/AdminClient/src/api/auth-api.ts":"18","/Users/mac3/Desktop/workspace/AdminClient/src/api/user-api.ts":"19","/Users/mac3/Desktop/workspace/AdminClient/src/api/order-api.ts":"20","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/index.tsx":"21","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/index.tsx":"22","/Users/mac3/Desktop/workspace/AdminClient/src/api/axios-client.ts":"23","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/dashboard-home.tsx":"24","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/stores.tsx":"25","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/customers.tsx":"26","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/fanpage.tsx":"27","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/users.tsx":"28","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/pages/save-token.tsx":"29","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/pages/login.tsx":"30","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/billings.tsx":"31","/Users/mac3/Desktop/workspace/AdminClient/src/layout/index.ts":"32","/Users/mac3/Desktop/workspace/AdminClient/src/components/loading/index.tsx":"33","/Users/mac3/Desktop/workspace/AdminClient/src/components/logo/index.tsx":"34","/Users/mac3/Desktop/workspace/AdminClient/src/api/dashboard-api.ts":"35","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/user-table.tsx":"36","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/fanpage-table.tsx":"37","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/detailStore.tsx":"38","/Users/mac3/Desktop/workspace/AdminClient/src/constants/index.ts":"39","/Users/mac3/Desktop/workspace/AdminClient/src/components/page-top-wrapper/index.tsx":"40","/Users/mac3/Desktop/workspace/AdminClient/src/layout/base-layout.tsx":"41","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/billings/index.tsx":"42","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/stores/index.tsx":"43","/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/index.tsx":"44","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/billing-table.tsx":"45","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/index.tsx":"46","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/store-table.tsx":"47","/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/sidebar.tsx":"48","/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/header.tsx":"49","/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/context.tsx":"50","/Users/mac3/Desktop/workspace/AdminClient/src/utils/format-money.ts":"51","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/billings/action.tsx":"52","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/order-table.tsx":"53","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/detail-store.tsx":"54","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/stores/action.tsx":"55","/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/header-right.tsx":"56","/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/header-left.tsx":"57","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/modal-order.tsx":"58","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/ship-status.tsx":"59","/Users/mac3/Desktop/workspace/AdminClient/src/components/not-found/not-found.tsx":"60","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/pages/header-page/index.tsx":"61","/Users/mac3/Desktop/workspace/AdminClient/src/components/not-found/index.ts":"62","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/report-financinal.tsx":"63","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/report-customer.tsx":"64","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/time-filter.tsx":"65","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/chart.tsx":"66","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/fanpages.tsx":"67","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/members.tsx":"68","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/packages.tsx":"69","/Users/mac3/Desktop/workspace/AdminClient/src/utils/format.ts":"70","/Users/mac3/Desktop/workspace/AdminClient/src/models/businessTypes.ts":"71","/Users/mac3/Desktop/workspace/AdminClient/src/models/fanpage.ts":"72","/Users/mac3/Desktop/workspace/AdminClient/src/models/staff.ts":"73","/Users/mac3/Desktop/workspace/AdminClient/src/components/back-link/index.tsx":"74","/Users/mac3/Desktop/workspace/AdminClient/src/components/select-package/index.tsx":"75","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/package.tsx":"76","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/table-insa/index.tsx":"77","/Users/mac3/Desktop/workspace/AdminClient/src/utils/convert.ts":"78","/Users/mac3/Desktop/workspace/AdminClient/src/models/store.ts":"79","/Users/mac3/Desktop/workspace/AdminClient/src/utils/get-time.ts":"80","/Users/mac3/Desktop/workspace/AdminClient/src/assets/icon/index.tsx":"81","/Users/mac3/Desktop/workspace/AdminClient/src/assets/icon/svg.tsx":"82"},{"size":527,"mtime":1624326600158,"results":"83","hashOfConfig":"84"},{"size":6096,"mtime":1624326600160,"results":"85","hashOfConfig":"84"},{"size":270,"mtime":1624326600147,"results":"86","hashOfConfig":"84"},{"size":180,"mtime":1624326600161,"results":"87","hashOfConfig":"84"},{"size":591,"mtime":1624326600160,"results":"88","hashOfConfig":"84"},{"size":1451,"mtime":1624326600160,"results":"89","hashOfConfig":"84"},{"size":1366,"mtime":1625561822454,"results":"90","hashOfConfig":"84"},{"size":1624,"mtime":1625561822461,"results":"91","hashOfConfig":"84"},{"size":2002,"mtime":1624326600158,"results":"92","hashOfConfig":"84"},{"size":1692,"mtime":1624326600154,"results":"93","hashOfConfig":"84"},{"size":1539,"mtime":1625561822461,"results":"94","hashOfConfig":"84"},{"size":1600,"mtime":1625561822461,"results":"95","hashOfConfig":"84"},{"size":2140,"mtime":1625561822461,"results":"96","hashOfConfig":"84"},{"size":1419,"mtime":1624326600160,"results":"97","hashOfConfig":"84"},{"size":137,"mtime":1624348264701,"results":"98","hashOfConfig":"84"},{"size":1658,"mtime":1625561822454,"results":"99","hashOfConfig":"84"},{"size":2470,"mtime":1625561822454,"results":"100","hashOfConfig":"84"},{"size":1099,"mtime":1625561822453,"results":"101","hashOfConfig":"84"},{"size":656,"mtime":1625561822455,"results":"102","hashOfConfig":"84"},{"size":1045,"mtime":1625561822454,"results":"103","hashOfConfig":"84"},{"size":823,"mtime":1625801004933,"results":"104","hashOfConfig":"84"},{"size":2141,"mtime":1625641703626,"results":"105","hashOfConfig":"84"},{"size":2510,"mtime":1625561822454,"results":"106","hashOfConfig":"84"},{"size":8884,"mtime":1625561822459,"results":"107","hashOfConfig":"84"},{"size":539,"mtime":1624326600157,"results":"108","hashOfConfig":"84"},{"size":149,"mtime":1624326600157,"results":"109","hashOfConfig":"84"},{"size":2392,"mtime":1625561822460,"results":"110","hashOfConfig":"84"},{"size":2254,"mtime":1624326600157,"results":"111","hashOfConfig":"84"},{"size":1585,"mtime":1624326600154,"results":"112","hashOfConfig":"84"},{"size":1144,"mtime":1624326600153,"results":"113","hashOfConfig":"84"},{"size":278,"mtime":1624326600157,"results":"114","hashOfConfig":"84"},{"size":131,"mtime":1624326600159,"results":"115","hashOfConfig":"84"},{"size":372,"mtime":1624326600151,"results":"116","hashOfConfig":"84"},{"size":653,"mtime":1625561822456,"results":"117","hashOfConfig":"84"},{"size":579,"mtime":1625561822454,"results":"118","hashOfConfig":"84"},{"size":2806,"mtime":1625561822459,"results":"119","hashOfConfig":"84"},{"size":3077,"mtime":1624326600156,"results":"120","hashOfConfig":"84"},{"size":5418,"mtime":1625561822460,"results":"121","hashOfConfig":"84"},{"size":1273,"mtime":1625561822456,"results":"122","hashOfConfig":"84"},{"size":651,"mtime":1624326600152,"results":"123","hashOfConfig":"84"},{"size":560,"mtime":1624326600158,"results":"124","hashOfConfig":"84"},{"size":2709,"mtime":1625561822457,"results":"125","hashOfConfig":"84"},{"size":607,"mtime":1625561822458,"results":"126","hashOfConfig":"84"},{"size":676,"mtime":1624326600159,"results":"127","hashOfConfig":"84"},{"size":5330,"mtime":1625561822456,"results":"128","hashOfConfig":"84"},{"size":113,"mtime":1624326600155,"results":"129","hashOfConfig":"84"},{"size":5500,"mtime":1625561822458,"results":"130","hashOfConfig":"84"},{"size":8435,"mtime":1625561822462,"results":"131","hashOfConfig":"84"},{"size":445,"mtime":1624326600159,"results":"132","hashOfConfig":"84"},{"size":763,"mtime":1624326600159,"results":"133","hashOfConfig":"84"},{"size":425,"mtime":1624326600161,"results":"134","hashOfConfig":"84"},{"size":1183,"mtime":1624326600154,"results":"135","hashOfConfig":"84"},{"size":5303,"mtime":1624326600155,"results":"136","hashOfConfig":"84"},{"size":2666,"mtime":1625561822457,"results":"137","hashOfConfig":"84"},{"size":434,"mtime":1624326600156,"results":"138","hashOfConfig":"84"},{"size":1935,"mtime":1625561822462,"results":"139","hashOfConfig":"84"},{"size":584,"mtime":1624326600159,"results":"140","hashOfConfig":"84"},{"size":3350,"mtime":1624326600155,"results":"141","hashOfConfig":"84"},{"size":777,"mtime":1624326600155,"results":"142","hashOfConfig":"84"},{"size":685,"mtime":1625562656242,"results":"143","hashOfConfig":"84"},{"size":388,"mtime":1624510048464,"results":"144","hashOfConfig":"84"},{"size":30,"mtime":1624348267365,"results":"145","hashOfConfig":"84"},{"size":5372,"mtime":1625561822460,"results":"146","hashOfConfig":"84"},{"size":5314,"mtime":1625561822460,"results":"147","hashOfConfig":"84"},{"size":744,"mtime":1625561822459,"results":"148","hashOfConfig":"84"},{"size":4985,"mtime":1625561822457,"results":"149","hashOfConfig":"84"},{"size":3236,"mtime":1625561822457,"results":"150","hashOfConfig":"84"},{"size":2003,"mtime":1625561822458,"results":"151","hashOfConfig":"84"},{"size":692,"mtime":1625561822458,"results":"152","hashOfConfig":"84"},{"size":125,"mtime":1625561822463,"results":"153","hashOfConfig":"84"},{"size":842,"mtime":1625561822463,"results":"154","hashOfConfig":"84"},{"size":332,"mtime":1625561822463,"results":"155","hashOfConfig":"84"},{"size":634,"mtime":1625561822463,"results":"156","hashOfConfig":"84"},{"size":997,"mtime":1625561822455,"results":"157","hashOfConfig":"84"},{"size":1912,"mtime":1625561822456,"results":"158","hashOfConfig":"84"},{"size":1100,"mtime":1625561822458,"results":"159","hashOfConfig":"84"},{"size":3026,"mtime":1625561822459,"results":"160","hashOfConfig":"84"},{"size":571,"mtime":1625561822463,"results":"161","hashOfConfig":"84"},{"size":795,"mtime":1625561822463,"results":"162","hashOfConfig":"84"},{"size":154,"mtime":1625561822463,"results":"163","hashOfConfig":"84"},{"size":183,"mtime":1625561822455,"results":"164","hashOfConfig":"84"},{"size":836,"mtime":1625561822455,"results":"165","hashOfConfig":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"1wsa6o0",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"168"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"168"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"168"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"168"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"168"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"168"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"168"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"168"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"168"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"168"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"168"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"168"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"168"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"168"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"/Users/mac3/Desktop/workspace/AdminClient/src/index.tsx",[],["350","351"],"/Users/mac3/Desktop/workspace/AdminClient/src/serviceWorker.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/App.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/state/store.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/state/root-reducer.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/routes/index.tsx",["352"],"import React, { lazy, Suspense, useEffect, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { getToken } from '../api/token';\nimport { Loading, NotFound } from '../components';\nimport { loadUser } from '../features/auth/state/authSlide';\nimport { GuestRouter, UserRouter } from './hoc-router';\n\n// import pages\nconst Dashboard = lazy(() => import('../features/dashboard'));\nconst Auth = lazy(() => import('../features/auth'));\n\ninterface Props {}\n\nconst Routes: FC<Props> = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector((state: any) => state.auth.loading);\n    const token = getToken();\n\n    useEffect(() => {\n        if (token) {\n            dispatch(loadUser());\n        }\n    }, []);\n\n    if (loading && token) return <Loading full />;\n\n    return (\n        <Suspense fallback={<Loading full />}>\n            <Router>\n                <Switch>\n                    <Redirect exact from='/' to='/dashboard' />\n                    <UserRouter path='/dashboard'>\n                        <Dashboard />\n                    </UserRouter>\n\n                    <GuestRouter path='/auth'>\n                        <Auth />\n                    </GuestRouter>\n\n                    <Route component={NotFound} />\n                </Switch>\n            </Router>\n        </Suspense>\n    );\n};\n\nexport default Routes;\n","/Users/mac3/Desktop/workspace/AdminClient/src/api/token.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/storeSlide.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/fanpageSlide.ts",["353"],"import { createSlice } from '@reduxjs/toolkit';\nimport { pick } from 'lodash';\nimport { message } from 'antd';\nimport fanpageApi from '../../../api/fanpage-api';\n\nconst fanpageSlide = createSlice({\n    name: 'fanpage',\n    initialState: {\n        loading: true,\n        fanpage: {},\n        page: 1,\n        limit: 10,\n        name: '',\n        sort: 'createdAt',\n        direction: 'desc',\n    },\n    reducers: {\n        loadFanpageStart(state) {\n            state.loading = true;\n        },\n        loadFanpageSuccess(state, action) {\n            state.fanpage = action.payload;\n            state.loading = false;\n        },\n        loadFanpageFailed(state) {\n            state.loading = false;\n        },\n        updateSort(state, action) {\n            state.page = action.payload.page;\n            state.limit = action.payload.limit;\n            state.sort = action.payload.sort;\n            state.direction = action.payload.direction;\n        },\n        searchFanpage(state, action) {\n            state.name = action.payload;\n        },\n    },\n});\n\nconst { actions, reducer } = fanpageSlide;\n\nexport const {\n    loadFanpageStart,\n    loadFanpageSuccess,\n    loadFanpageFailed,\n    updateSort,\n    searchFanpage,\n} = actions;\n\nexport const loadFanpage = () => async (dispatch: any, getState: any) => {\n    try {\n        const state = getState();\n        const data = pick(state.fanpage, ['page', 'limit', 'name', 'sort', 'direction']);\n        dispatch(loadFanpageStart());\n        const response = await fanpageApi.loadFanpage(data);\n\n        dispatch(loadFanpageSuccess(response));\n    } catch (err) {\n        dispatch(loadFanpageFailed());\n    }\n};\n\nexport const updateFanpage = (dataPut: any) => async (dispatch: any, getState: any) => {\n    try {\n        const response = await fanpageApi.updateFanpageRequest(dataPut);\n        message.success('Cập nhật thành công');\n    } catch (err) {\n        console.log(err);\n        dispatch(loadFanpageFailed());\n    }\n};\n\nexport default reducer;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/state/authSlide.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/ordersSlide.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/userSlide.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/billingSlide.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/routes/hoc-router.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/components/index.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/api/fanpage-api.ts",["354"],"import axios from './axios-client';\n\nasync function loadFanpage({\n    limit = 10,\n    page = 1,\n    name,\n    sort = 'createdAt',\n    direction = 'asc',\n}: {\n    limit?: number;\n    page?: number;\n    name?: number;\n    sort?: string;\n    direction?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages`;\n\n    const params = {\n        limit,\n        page,\n        name,\n        sort,\n        direction,\n    };\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nasync function updateFanpageRequest({\n    expiredAt,\n    fanpageId,\n}: {\n    expiredAt: string;\n    fanpageId: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages/${fanpageId}`;\n\n    const data = {\n        expiredAt,\n    };\n\n    const response = await axios({\n        method: 'PUT',\n        url,\n        data,\n    });\n    return response;\n}\n\nasync function getFanPagesByStoreId({\n    storeId,\n    limit = 10,\n    page = 1,\n    sort = 'createdAt',\n    direction = 'desc',\n}: {\n    storeId: string;\n    limit: number;\n    page: number;\n    sort?: string;\n    direction?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages`;\n\n    const params = {\n        storeId,\n        limit,\n        page,\n        sort,\n        direction,\n    };\n\n    const data = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return data;\n}\n\nexport default {\n    loadFanpage,\n    updateFanpageRequest,\n    getFanPagesByStoreId,\n};\n","/Users/mac3/Desktop/workspace/AdminClient/src/api/store-api.ts",["355"],"import constants from '../constants';\nimport axios from './axios-client';\n\nasync function loadStores({\n    limit = 10,\n    page = 1,\n    search,\n    sort = 'createdAt',\n    direction = 'asc',\n}: {\n    limit?: number;\n    page?: number;\n    search?: string;\n    sort?: string;\n    direction?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/stores`;\n\n    const params = {\n        limit,\n        page,\n        search,\n        sort,\n        direction,\n    };\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nasync function loadStore({ storeId }: { storeId: string }): Promise<any> {\n    const url = `/administrator/v1/stores/${storeId}`;\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nasync function loadNewBillings({\n    limit = 10,\n    page = 1,\n    search,\n    sort = 'createdAt',\n    direction = 'desc',\n    type,\n}: {\n    limit?: number; \n    page?: number;\n    search?: string;\n    sort?: string;\n    direction?: string;\n    type?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/admin/billing-stores`;\n\n    const params: any = {\n        limit,\n        page,\n        ...search && { search },\n        sort,\n        direction,\n        ...type && type !== constants.ROOT && { type },\n    }\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        params,\n    });\n\n    return response;\n}\n\nasync function approveBilling({ billingId }: { billingId: string }): Promise<any> {\n    const url = `/administrator/v1/admin/billing-stores/${billingId}/approve`;\n\n    const response = await axios({\n        method: 'POST',\n        url,\n        data: {},\n    });\n    return response;\n}\n\nasync function getFigures({\n    storeId,\n    startTime,\n    endTime,\n}: {\n    storeId: string,\n    startTime: string,\n    endTime: string,\n}): Promise<any> {\n    const url = `/administrator/v1/report/stores/${storeId}`;\n\n    const params = {\n        startTime,\n        endTime,\n    }\n\n    const data = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return data;\n}\n\nexport default {\n    loadStores,\n    loadStore,\n    loadNewBillings,\n    approveBilling,\n    getFigures,\n};\n","/Users/mac3/Desktop/workspace/AdminClient/src/api/auth-api.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/api/user-api.ts",["356"],"import axios from './axios-client';\n\nasync function loadUsers({\n    limit = 10,\n    page = 1,\n    search,\n    sort = 'createdAt',\n    direction = 'asc',\n}: {\n    limit?: number;\n    page?: number;\n    search?: number;\n    sort?: string;\n    direction?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/users`;\n\n    const params = {\n        limit,\n        page,\n        search,\n        sort,\n        direction,\n    };\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nexport default {\n    loadUsers,\n};\n","/Users/mac3/Desktop/workspace/AdminClient/src/api/order-api.ts",["357"],"import axios from './axios-client';\n\nasync function loadOrders(\n    storeId: string,\n    {\n        limit,\n        page,\n        name,\n        sort,\n        direction,\n    }: {\n        limit?: number;\n        page?: number;\n        name?: number;\n        sort?: string;\n        direction?: string;\n    }\n): Promise<any> {\n    const url = `/administrator/v1/stores/${storeId}/orders`;\n\n    const params = {\n        limit,\n        page,\n        name,\n        sort,\n        direction,\n    };\n\n    const response = await axios({\n        url,\n        method: 'GET',\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nasync function loadOrder(storeId: string, orderId: string): Promise<any> {\n    const url = `/store/v1/stores/${storeId}/orders/${orderId}`;\n\n    const response = await axios({\n        url,\n        method: 'GET',\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nexport default {\n    loadOrders,\n    loadOrder,\n};\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/api/axios-client.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/dashboard-home.tsx",["358"],"import { Card, Col, Divider, message, Row, Select, Space, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport iconStore from '../../../assets/images/ic-dashboard-store.svg';\nimport iconUser from '../../../assets/images/ic-dashboard-user.svg';\nimport iconOrder from '../../../assets/images/ic-dashboard-order.svg';\nimport imgOrder from '../../../assets/images/img-dashboard-order.svg';\nimport imgUser from '../../../assets/images/img-dashboard-user.svg';\nimport imgStore from '../../../assets/images/img-dashboard-store.svg';\nimport './dashboard-home.less';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport DashboardApi from '../../../api/dashboard-api';\nimport moment from 'moment';\n\ninterface Props { }\ninterface IDashboardReport {\n    data: Array<{ date: string; value: number }>;\n    total: number;\n}\n\nconst DashboardHome = (props: Props) => {\n    const [order, setOrder] = useState<IDashboardReport>({ data: [], total: 0 });\n    const [user, setUser] = useState<IDashboardReport>({ data: [], total: 0 });\n    const [store, setStore] = useState<IDashboardReport>({ data: [], total: 0 });\n    /**\n     * filter by week or month\n     * select the start of week/month and end of week/month to send to server\n     * api has supported\n     */\n    const [filterType, setFilterType] = useState<'isoWeek' | 'month'>('isoWeek');\n    const filterTypeOptions = [\n        {\n            value: 'isoWeek',\n            label: 'Theo tuần',\n        },\n        {\n            value: 'month',\n            label: 'Theo tháng',\n        },\n    ];\n\n    const options = (\n        data: Array<{ date: string; value: number }>,\n        name: string,\n        color: string\n    ): Highcharts.Options => ({\n        title: { text: '' },\n        subtitle: { text: '' },\n        xAxis: {\n            categories:\n                filterType === 'isoWeek'\n                    ? ['M', 'T', 'W', 'T', 'F', 'S', 'S']\n                    : data.map((e) => e.date.split('/')[0]),\n        },\n        yAxis: { title: { text: '' } },\n        series: [\n            {\n                name,\n                type: 'column',\n                data: data.map((e) => e.value),\n            },\n        ],\n        chart: {\n            height: 250,\n        },\n        colors: [color],\n        plotOptions: {\n            column: {\n                borderRadius: 5,\n                pointWidth: filterType === 'isoWeek' ? 20 : undefined,\n            },\n        },\n    });\n    const requestOrder = async () => {\n        const startTime: string = moment().startOf(filterType).valueOf().toString();\n        const endTime: string = moment().endOf(filterType).valueOf().toString();\n\n        Promise.all([\n            DashboardApi.loadReport({\n                type: 'new-orders',\n                startTime,\n                endTime,\n            }).then((resOrder) => setOrder(resOrder)),\n            DashboardApi.loadReport({\n                type: 'new-users',\n                startTime,\n                endTime,\n            }).then((resUser) => setUser(resUser)),\n            DashboardApi.loadReport({\n                type: 'new-stores',\n                startTime,\n                endTime,\n            }).then((resStore) => setStore(resStore)),\n        ]).catch((e) => message.error(e.message || 'Something went wrong'));\n    };\n\n    useEffect(() => {\n        requestOrder();\n    }, [filterType]);\n\n    return (\n        <>\n            <PageTopWrapper\n                leftContent={<Typography.Title level={3}>TỔNG QUAN</Typography.Title>}\n                rightContent={\n                    <Select\n                        placeholder='Theo tuần'\n                        value={filterType}\n                        onChange={(value) => setFilterType(value)}\n                    >\n                        {filterTypeOptions.map((item) => (\n                            <Select.Option key={item.value} value={item.value}>\n                                {item.label}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                }\n            />\n            <div style={{ padding: 20 }} >\n                <Row gutter={[30, 22]}>\n                    <Col span={12}>\n                        <Row gutter={[20, 0]} style={{ height: '100%' }}>\n                            <Col span={8}>\n                                <div className='dashboard-card-summary yellow'>\n                                    <img src={imgOrder} alt='' />\n                                    <p className='title'>{order.total}</p>\n                                    <Divider />\n                                    <Typography.Text className='text'>\n                                        Số lượng đơn\n                                    <br /> đặt hàng\n                                </Typography.Text>\n                                </div>\n                            </Col>\n                            <Col span={8}>\n                                <div className='dashboard-card-summary blue'>\n                                    <img src={imgStore} alt='' />\n                                    <p className='title'>{store.total}</p>\n                                    <Divider />\n                                    <Typography.Text className='text'>\n                                        Số lượng\n                                    <br />\n                                    cửa hàng\n                                </Typography.Text>\n                                </div>\n                            </Col>\n                            <Col span={8}>\n                                <div className='dashboard-card-summary'>\n                                    <img src={imgUser} alt='' />\n                                    <p className='title'>{user.total}</p>\n                                    <Divider />\n                                    <Typography.Text className='text'>\n                                        Số lượng\n                                    <br />\n                                    người dùng\n                                </Typography.Text>\n                                </div>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col span={12}>\n                        <Card\n                            className='dashboard-card-chart'\n                            title={\n                                <Space>\n                                    <img src={iconStore} alt='' />\n                                    <Typography.Text>Số lượng cửa hàng mới trong tuần</Typography.Text>\n                                </Space>\n                            }\n                        >\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                options={options(store.data, 'Số lượng cửa hàng mới', '#41a2ff')}\n                            />\n                        </Card>\n                    </Col>\n                    <Col span={12}>\n                        <Card\n                            className='dashboard-card-chart'\n                            title={\n                                <Space>\n                                    <img src={iconUser} alt='' />\n                                    <Typography.Text>\n                                        Số lượng người dùng mới trong tuần\n                                </Typography.Text>\n                                </Space>\n                            }\n                        >\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                options={options(user.data, 'Số lượng người dùng mới', '#28c8d3')}\n                            />\n                        </Card>\n                    </Col>\n                    <Col span={12}>\n                        <Card\n                            className='dashboard-card-chart'\n                            title={\n                                <Space>\n                                    <img src={iconOrder} alt='' />\n                                    <Typography.Text>Số lượng đơn hàng mới trong tuần</Typography.Text>\n                                </Space>\n                            }\n                        >\n                            <HighchartsReact\n                                highcharts={Highcharts}\n                                options={options(order.data, 'Số lượng đơn hàng mới', '#6c6fbf')}\n                            />\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default DashboardHome;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/stores.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/customers.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/fanpage.tsx",["359"],"import PageTopWrapper from '../../../components/page-top-wrapper';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { Button, Typography, Col, Input, Row } from 'antd';\nimport React, { useEffect, useState, FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BaseLayout } from '../../../layout';\nimport FanpageTable from '../components/fanpage-table';\nimport { loadFanpage, searchFanpage } from '../state/fanpageSlide';\n\ninterface Props {}\n\nconst { Search } = Input;\n\nconst Fanpage: FC<Props> = () => {\n    const [text, setText] = useState('');\n    const page = useSelector((state: any) => state.fanpage.page);\n    const limit = useSelector((state: any) => state.fanpage.limit);\n    const sort = useSelector((state: any) => state.fanpage.sort);\n    const direction = useSelector((state: any) => state.fanpage.direction);\n    const name = useSelector((state: any) => state.fanpage.name);\n    const dispatch = useDispatch();\n\n    const onSearch = (value: string) => {\n        dispatch(searchFanpage(value));\n    };\n\n    const onChangeText = (e: any) => {\n        setText(e.target.value);\n    };\n\n    const resetSearch = () => {\n        dispatch(searchFanpage(null));\n        setText('');\n    };\n\n    useEffect(() => {\n        dispatch(loadFanpage());\n    }, [page, limit, sort, direction, name]);\n\n    return (\n        <BaseLayout>\n            <PageTopWrapper\n                leftContent={\n                    <Typography.Title style={{ margin: 0 }} level={3}>\n                        FANPAGES\n                    </Typography.Title>\n                }\n                rightContent={<div />}\n            />\n            <div style={{ padding: 20 }}>\n                <Row gutter={15} style={{ marginBottom: 15 }} align='middle'>\n                    <Col>Tìm kiếm</Col>\n                    <Col>\n                        <Search\n                            value={text}\n                            onChange={onChangeText}\n                            onSearch={onSearch}\n                            placeholder='Tìm kiếm'\n                        />\n                    </Col>\n\n                    <Col>\n                        <Button icon={<ReloadOutlined />} onClick={resetSearch}></Button>\n                    </Col>\n                </Row>\n\n                <FanpageTable />\n            </div>\n        </BaseLayout>\n    );\n};\n\nexport default Fanpage;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/users.tsx",["360"],"import { ReloadOutlined } from '@ant-design/icons';\nimport { Button, Col, Input, Row, Typography } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport { BaseLayout } from '../../../layout';\nimport UserTable from '../components/user-table';\nimport { loadUsers, searchUser } from '../state/userSlide';\n\ninterface Props {}\n\nconst { Search } = Input;\n\nconst Users: FC<Props> = () => {\n    const [text, setText] = useState('');\n    const page = useSelector((state: any) => state.user.page);\n    const limit = useSelector((state: any) => state.user.limit);\n    const sort = useSelector((state: any) => state.user.sort);\n    const direction = useSelector((state: any) => state.user.direction);\n    const search = useSelector((state: any) => state.user.search);\n    const dispatch = useDispatch();\n\n    const onSearch = (value: string) => {\n        dispatch(searchUser(value));\n    };\n\n    const onChangeText = (e: any) => {\n        setText(e.target.value);\n    };\n\n    const resetSearch = () => {\n        dispatch(searchUser(null));\n        setText('');\n    };\n\n    useEffect(() => {\n        dispatch(loadUsers());\n    }, [page, limit, sort, direction, search]);\n\n    return (\n        <BaseLayout>\n            <PageTopWrapper\n                leftContent={<Typography.Title level={3}>NGƯỜI DÙNG</Typography.Title>}\n                rightContent={<div />}\n            />\n            <div style={{ padding: 20 }}>\n                <Row gutter={15} style={{ marginBottom: 15 }} align='middle'>\n                    <Col>Tìm kiếm</Col>\n                    <Col>\n                        <Search\n                            value={text}\n                            onChange={onChangeText}\n                            onSearch={onSearch}\n                            placeholder='Tìm kiếm'\n                        />\n                    </Col>\n\n                    <Col>\n                        <Button icon={<ReloadOutlined />} onClick={resetSearch}></Button>\n                    </Col>\n                </Row>\n\n                <UserTable />\n            </div>\n        </BaseLayout>\n    );\n};\n\nexport default Users;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/pages/save-token.tsx",["361"],"import { message } from 'antd';\nimport * as queryString from 'query-string';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { IToken, setToken } from '../../../api/token';\nimport { Loading } from '../../../components';\nimport { BaseLayout } from '../../../layout';\nimport { loadUser } from '../state/authSlide';\n\ninterface Props {}\n\nconst SaveToken = (props: Props) => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const searchState: {\n        token?: string;\n        remember?: string;\n        location?: string;\n    } = queryString.parse(history.location.search);\n\n    const saveAndLoadUser = async (): Promise<void> => {\n        const { token, remember, location } = searchState;\n        if (!token || !location) {\n            return;\n        }\n        const rememberValue = remember === 'true';\n        const tokenValue: IToken = JSON.parse(token);\n        await setToken({ token: tokenValue, remember: rememberValue });\n        await dispatch(loadUser());\n        message.success('Đăng nhập thành công');\n        const locationValue: Location = JSON.parse(location);\n        if (locationValue.pathname.includes('/auth')) {\n            history.replace('/dashboard/overview');\n            return;\n        }\n        history.replace(locationValue);\n    };\n\n    useEffect(() => {\n        saveAndLoadUser();\n    }, []);\n\n    return (\n        <BaseLayout title='Login'>\n            <Loading full />\n        </BaseLayout>\n    );\n};\n\nexport default SaveToken;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/pages/login.tsx",["362"],"import * as queryString from 'query-string';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { Loading } from '../../../components';\nimport constants from '../../../constants';\nimport { BaseLayout } from '../../../layout';\n\ninterface Props {}\n\nconst Login = (props: Props) => {\n    const location = useLocation();\n    const isLogout = useSelector((state: any) => state.auth.isLogout);\n\n    useEffect(() => {\n        const lastState: any = location.state;\n        let lastLocation = lastState?.from;\n        if (!lastLocation?.pathname) {\n            lastLocation = {\n                pathname: '/dashboard/overview',\n            };\n        }\n        const search = queryString.stringify({\n            url: `${window.location.origin}/auth/save-token`,\n            location: JSON.stringify(lastLocation),\n            isLogout,\n        });\n        window.location.href = `${constants.URL_AUTH}login?${search}`;\n    }, []);\n\n    return (\n        <BaseLayout title='Login'>\n            <Loading full />\n        </BaseLayout>\n    );\n};\n\nexport default Login;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/billings.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/layout/index.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/components/loading/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/components/logo/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/api/dashboard-api.ts",["363"],"import axios from './axios-client';\n\nasync function loadReport({\n    type,\n    startTime,\n    endTime,\n}: {\n    type: 'new-orders' | 'new-stores' | 'new-users'| 'finance';\n    startTime: string;\n    endTime: string;\n}): Promise<any> {\n    const url = `/administrator/v1/report/${type}`;\n\n    const params = {\n        startTime,\n        endTime,\n    };\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nexport default {\n    loadReport,\n};\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/user-table.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/fanpage-table.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/detailStore.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/constants/index.ts",["364"],"export default {\n    title: 'Administrator',\n    URL_API: process.env.REACT_APP_API_URI,\n    URL_AUTH: process.env.REACT_APP_AUTH_URL,\n    URL_IMG: process.env.REACT_APP_IMG_URL,\n    ROOT: 'root',\n};\n\nexport enum EBillingPackageType {\n    Trial = 1 << 0,\n    Omni = 1 << 1,\n    Pos = 1 << 2,\n    Facebook = 1 << 3,\n    Shopee = 1 << 4,\n}\n\nexport const ColorPackage = {\n    [EBillingPackageType.Pos]: '#6c6fbf',\n    [EBillingPackageType.Shopee]: '#f53d2d',\n    [EBillingPackageType.Facebook]: '#1877F2',\n    [EBillingPackageType.Omni]: '#0885fb',\n};\n\nexport const AliasPackage = {\n    [EBillingPackageType.Pos]: 'INSA POS',\n    [EBillingPackageType.Facebook]: 'INSA FACEBOOK',\n    [EBillingPackageType.Trial]: 'INSA TRIAL',\n    [EBillingPackageType.Shopee]: 'INSA SHOPEE',\n    [EBillingPackageType.Omni]: 'OMNI',\n};\n\nexport enum EFilterType {\n    WEEK = 'isoWeek',\n    MONTH = 'month',\n    QUARTER = 'quarter',\n    YEAR = 'year'\n}\n\nexport const filterTypeOptions = [\n    {\n        value: EFilterType.WEEK,\n        label: 'Theo tuần',\n    },\n    {\n        value: EFilterType.MONTH,\n        label: 'Theo tháng',\n    },\n    {\n        value: EFilterType.QUARTER,\n        label: 'Theo quý',\n    },\n    {\n        value: EFilterType.YEAR,\n        label: 'Theo năm',\n    },\n];\n","/Users/mac3/Desktop/workspace/AdminClient/src/components/page-top-wrapper/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/layout/base-layout.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/billings/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/stores/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/billing-table.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/store-table.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/sidebar.tsx",["365"],"import { Layout, Menu } from 'antd';\nimport React, { FC, useEffect, useState } from 'react';\nimport Media from 'react-media';\nimport { some } from 'lodash';\nimport { Link, NavLink, useLocation } from 'react-router-dom';\nimport icActionsUser from '../../assets/images/ic-actions-user.svg';\nimport iconTrigger from '../../assets/images/ic-chevron-left-right.svg';\nimport iconContactChat from '../../assets/images/ic-contact-chat.svg';\nimport iconEcommerceHouse from '../../assets/images/ic-ecommerce-house.svg';\nimport iconProduct from '../../assets/images/ic-layout-left-menu.svg';\nimport icReport from '../../assets/images/ic-report.svg';\nimport icStatisticFunnel from '../../assets/images/ic-statistics-funnel.svg';\nimport icBox from '../../assets/images/ic-box.svg';\nimport { Logo } from '../../components';\nimport { useLayoutDasboard } from './context';\nimport './dashboard-layout.less';\n\nconst { Sider } = Layout;\n\ninterface TriggerIconProps {\n    collapsed: boolean;\n}\n\nconst TriggerIcon: FC<TriggerIconProps> = ({ collapsed }) => {\n    const degRotate = collapsed ? '180deg' : '0deg';\n    const style = {\n        transform: `rotate(${degRotate})`,\n    };\n    return <img src={iconTrigger} alt='icon' style={{ ...style }} />;\n};\n\ninterface Props {}\n\nexport interface MenuChildType {\n    href: string;\n    title: string;\n    icon?: string;\n    children?: MenuChildType[];\n    otherHref?: string[];\n}\n\nexport const menus: MenuChildType[] = [\n    {\n        title: 'Tổng quan',\n        href: '/dashboard/overview',\n        icon: iconProduct,\n    },\n    {\n        title: 'Cửa hàng',\n        href: '/dashboard/shops',\n        icon: iconEcommerceHouse,\n    },\n    {\n        title: 'Người dùng',\n        icon: icActionsUser,\n        href: '/dashboard/users',\n    },\n    {\n        title: 'Billings',\n        icon: icBox,\n        href: '/dashboard/billings',\n    },\n    {\n        title: 'Facebook',\n        href: '/facebook',\n        icon: iconContactChat,\n        children: [\n            {\n                title: 'Fanpages',\n                href: '/dashboard/fanpage',\n            },\n        ],\n    },\n    {\n        title: 'Báo cáo',\n        href: 'report',\n        icon: icReport,\n        children: [\n            {\n                title: 'Báo cáo bán hàng',\n                href: '/dashboard/reports',\n            },\n            {\n                title: 'Báo cáo nhập hàng',\n                href: '/dashboard/reports/warehouse',\n            },\n            {\n                title: 'Báo cáo tài chính',\n                href: '/dashboard/reports/financinal',\n            },\n            {\n                title: 'Báo cáo khách hàng',\n                href: '/dashboard/reports/customer',\n            },\n        ],\n    },\n    {\n        title: 'Cài đặt',\n        href: 'setting',\n        icon: icStatisticFunnel,\n        children: [],\n    },\n];\n\nconst Sidebar: FC<Props> = () => {\n    const { collapsed, toggleCollapsed } = useLayoutDasboard();\n\n    const location = useLocation();\n\n    const [selectedKey, setSelectedKey] = useState<string>(window.location.pathname);\n\n    const classNameMenu = collapsed ? 'menu small' : 'menu';\n\n    useEffect(() => {\n        let parentMenu;\n        let childrenMenu;\n\n        for (const menu of menus) {\n            parentMenu = menu;\n            if (!!menu.href && menu.href !== '/') {\n                if (menu.children) {\n                    childrenMenu = menu.children.find(\n                        (subMenu: MenuChildType) =>\n                            location.pathname.includes(subMenu.href) ||\n                            some(subMenu.otherHref, (href: string) =>\n                                location.pathname.includes(href),\n                            ),\n                    );\n                    if (childrenMenu) {\n                        break;\n                    }\n                } else if (location.pathname.includes(menu.href)) {\n                    break;\n                }\n            }\n        }\n\n        if (parentMenu && childrenMenu) {\n            setSelectedKey(childrenMenu?.href || location.pathname);\n        } else {\n            setSelectedKey(parentMenu?.href || window.location.pathname);\n        }\n    }, [location, collapsed]);\n\n    return (\n        <Media query={{ maxWidth: 599 }}>\n            {(matches) =>\n                matches ? (\n                    <Sider collapsed={collapsed} onCollapse={toggleCollapsed} width={0}>\n                        <div className='sidebar-logo'>\n                            <Logo size={100} />\n                        </div>\n\n                        <div className='menus'>\n                            {menus.map((menu) => (\n                                <NavLink\n                                    key={menu.href}\n                                    to={menu.href}\n                                    href={menu.href}\n                                    activeClassName='active'\n                                    className={classNameMenu}\n                                >\n                                    <span\n                                        className='nav__icon anticon'\n                                        style={{\n                                            backgroundImage: `url(${menu.icon})`,\n                                        }}\n                                    ></span>\n                                    <span className='text'>{menu.title}</span>\n                                </NavLink>\n                            ))}\n                        </div>\n                    </Sider>\n                ) : (\n                    <Sider\n                        collapsed={collapsed}\n                        onCollapse={toggleCollapsed}\n                        collapsible\n                        width={250}\n                        trigger={<TriggerIcon collapsed={collapsed} />}\n                        style={{\n                            backgroundColor: '#252f47',\n                        }}\n                    >\n                        <div className='sidebar-logo'>\n                            <Logo size={150} collapsed={collapsed} />\n                        </div>\n\n                        <Menu mode='inline' theme='dark' className='nav__menu'>\n                            {menus.map((c: MenuChildType) =>\n                                Boolean(c.children) ? (\n                                    <Menu.SubMenu\n                                        icon={\n                                            <span>\n                                                <span\n                                                    className='nav__icon anticon'\n                                                    style={{\n                                                        backgroundImage: `url(${c.icon})`,\n                                                    }}\n                                                ></span>\n                                                <span>{c.title}</span>\n                                            </span>\n                                        }\n                                        key={c.href}\n                                    >\n                                        {c.children?.map((sub) => (\n                                            <Menu.Item key={sub.href}>\n                                                <Link to={sub.href}>{sub.title}</Link>\n                                            </Menu.Item>\n                                        ))}\n                                    </Menu.SubMenu>\n                                ) : (\n                                    <Menu.Item key={c.href}>\n                                        <Link to={c.href}>\n                                            <span\n                                                className='nav__icon anticon'\n                                                style={{\n                                                    backgroundImage: `url(${c.icon})`,\n                                                }}\n                                            ></span>\n                                            <span>{c.title}</span>\n                                        </Link>\n                                    </Menu.Item>\n                                ),\n                            )}\n                        </Menu>\n                    </Sider>\n                )\n            }\n        </Media>\n    );\n};\n\nexport default Sidebar;\n","/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/header.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/context.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/utils/format-money.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/billings/action.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/order-table.tsx",["366"],"import React, { useEffect, useState } from 'react';\nimport { Table } from 'antd';\nimport { get } from 'lodash';\nimport { ColumnsType } from 'antd/lib/table';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport formatMoney from '../../../../utils/format-money';\nimport ShipStatus from './ship-status';\nimport { loadOrders, updateSort } from '../../state/ordersSlide';\nimport ModalOrder from './modal-order';\n\nconst LIMIT = 20;\n\nconst getValue = (products: any, type: 'weight' | 'price') => {\n    if (type === 'weight') {\n        return products.reduce((value: number, p: any) =>  get(p, 'productId.weight', 0) * p.count + value, 0);\n    }\n\n    return products.reduce((value: number, p: any) => p.productId.price * p.count + value, 0);\n};\n\nconst columns: ColumnsType<any> | undefined = [\n    {\n        title: <span className='th'>Ngày</span>,\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        render: (createdAt: Date) => (\n            <>\n                {moment(createdAt).format('HH:mm')}\n                <br />\n                {moment(createdAt).format('DD/MM/YYYY')}\n            </>\n        ),\n    },\n    {\n        title: <span className='th'>Khách hàng</span>,\n        dataIndex: 'customer',\n        key: 'customer',\n        render: (customer: any) => {\n            return (\n                <>\n                    {customer.name}\n                    <br />\n                    {customer.phoneNo}\n                </>\n            );\n        },\n    },\n    {\n        title: <span className='th'>Người tạo</span>,\n        dataIndex: 'createdBy',\n        key: 'createdBy',\n        render: (createdBy: any) => {\n            if (!createdBy) return null;\n\n            return <>{createdBy.name}</>;\n        },\n    },\n    {\n        title: <span className='th'>KL(g)</span>,\n        dataIndex: 'products',\n        key: 'weight',\n\n        render: (products: any) => getValue(products, 'weight'),\n    },\n    {\n        title: <span className='th'>Tổng tiền(VND)</span>,\n        dataIndex: 'totalPrice',\n        key: 'price',\n        render: (totalPrice: number) => formatMoney(totalPrice),\n    },\n\n    {\n        title: <span className='th'>Trạng thái</span>,\n        dataIndex: 'status',\n        key: 'trang_thai',\n        render: (status: any, record: { _id: string }) => {\n            return status;\n        },\n    },\n\n    {\n        title: <span className='th'>Vận chuyển</span>,\n        dataIndex: 'deliveryOptions',\n        key: 'ship',\n        render: ({ serviceId }: { serviceId?: number }) => {\n            return <ShipStatus ship={serviceId} />;\n        },\n    },\n    {\n        title: <span className='th'>Chênh lệch PVC(VND)</span>,\n        dataIndex: 'deliveryOptions',\n\n        key: 'xx',\n        render: ({\n            shipmentFee,\n            shipmentFeeForCustomer,\n        }: {\n            shipmentFee: any;\n            shipmentFeeForCustomer: any;\n        }) => {\n            return formatMoney(shipmentFeeForCustomer - shipmentFee);\n        },\n    },\n];\n\ninterface IProps {\n    storeId: string;\n}\n\nconst OrderTable = ({ storeId }: IProps) => {\n    const dispatch = useDispatch();\n    const [visible, setVisible] = useState(false);\n    const [currentItem, setCurrentItem] = useState(false);\n\n    const order = useSelector(({ order }: { order: any }) => order);\n    const { loading, limit, direction, name, sort, page, orders } = order;\n\n    const handleTableChange = (pagination: any, filters: any, sorter: any) => {\n        const direction = sorter.order === 'ascend' ? 'asc' : sorter.order;\n\n        const data = {\n            page: pagination.current,\n            limit: pagination.pageSize,\n            sort: sorter.field,\n            direction,\n        };\n\n        dispatch(updateSort(data));\n    };\n\n    useEffect(() => {\n        dispatch(loadOrders(storeId));\n    }, [page, limit, sort, direction, name]);\n\n    const dataSource = (orders.data || []).map((o: any) => ({ ...o, key: o._id }));\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        handleTableChange({ current: page, pageSize }, {}, {});\n    };\n\n    const onCancel = () => {\n        setVisible(false);\n    };\n\n    return (\n        <div className='table-content'>\n            <Table\n                dataSource={dataSource}\n                columns={columns}\n                loading={loading}\n                className='orders-table'\n                onRow={(record) => {\n                    return {\n                        onClick: (event) => {\n                            if (\n                                (event.target as any).className &&\n                                (event.target as any).className === 'ant-table-cell'\n                            ) {\n                                setVisible(true);\n                                setCurrentItem(record);\n                            }\n                        },\n                    };\n                }}\n                pagination={{\n                    onChange: onChangePage,\n                    total: orders.total,\n                    pageSize: LIMIT,\n                }}\n                rowKey='_id'\n            />\n\n            <ModalOrder record={currentItem} visible={visible} onCancel={onCancel} />\n        </div>\n    );\n};\n\nexport default OrderTable;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/detail-store.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/stores/action.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/header-right.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/header-left.tsx",["367"],"import { Button, Row, Col } from 'antd';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { menus } from './sidebar';\n\ninterface Props {}\n\nconst HeaderLeft = (props: Props) => {\n    const location = useLocation();\n\n    const menu = menus.find((m: any) => m.to === location.pathname);\n\n    const title = menu ? menu.title : '';\n\n    return (\n        <Row justify='center' align='middle' gutter={10}>\n            <Col>\n                <span style={{ fontSize: 18 }}>{title}</span>\n            </Col>\n        </Row>\n    );\n};\n\nexport default HeaderLeft;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/modal-order.tsx",["368","369"],"import React from 'react';\nimport { Modal, Row, Col, Card } from 'antd';\nimport moment from 'moment';\nimport ShipStatus from './ship-status';\n\nimport formatMoney from '../../../../utils/format-money';\n\ninterface IProps {\n    record: any;\n    visible: boolean;\n    onCancel: any;\n}\n\nconst ModalOrder = ({ record, visible, onCancel }: IProps) => {\n    if (!record) {\n        return null;\n    }\n\n    const {\n        createdAt,\n        customer,\n        createdBy,\n        products,\n        totalPrice,\n        status,\n        deliveryOptions = {},\n    } = record;\n    const { serviceId, shipmentFee, shipmentFeeForCustomer } = deliveryOptions;\n\n    const getValue = (products: any, type: 'weight' | 'price') => {\n        if (type === 'weight') {\n            return products.reduce(\n                (value: number, p: any) => p.productId.weight * p.count + value,\n                0\n            );\n        }\n\n        return products.reduce((value: number, p: any) => p.productId.price * p.count + value, 0);\n    };\n\n    return (\n        <Modal\n            className={'detail__order'}\n            title={`Chi tiết Đơn hàng`}\n            visible={visible}\n            onCancel={onCancel}\n        >\n            <Row>\n                <Card style={{ width: '100%' }}>\n                    <Row gutter={24}>\n                        <Col span={6}>Ngày</Col>\n                        <Col span={18}>\n                            <>\n                                {moment(createdAt).format('HH:mm')}{' '}\n                                {moment(createdAt).format('DD/MM/YYYY')}\n                            </>\n                        </Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={6}>Khách hàng</Col>\n                        <Col span={18}>\n                            <>\n                                {customer.name} {customer.phoneNo}\n                            </>\n                        </Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={6}>Người tạo</Col>\n                        <Col span={18}>{createdBy.name}</Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={6}>KL(g)</Col>\n                        <Col span={18}>{getValue(products, 'weight')}</Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={6}>Tổng tiền(VND)</Col>\n                        <Col span={18}>{formatMoney(totalPrice)}</Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={6}>Trạng thái</Col>\n                        <Col span={18}>{status}</Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={6}>Vận chuyển</Col>\n                        <Col span={18}>\n                            <ShipStatus ship={serviceId} />\n                        </Col>\n                    </Row>\n                    <Row gutter={24}>\n                        <Col span={6}>Chênh lệch PVC(VND)</Col>\n                        <Col span={18}>\n                            <ShipStatus ship={serviceId} />\n                        </Col>\n                    </Row>\n                </Card>\n            </Row>\n        </Modal>\n    );\n};\n\nexport default ModalOrder;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/ship-status.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/components/not-found/not-found.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/auth/pages/header-page/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/components/not-found/index.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/report-financinal.tsx",["370"],"import { UploadOutlined } from '@ant-design/icons';\nimport { Button, Card, Col, message, Row, Space, Table, Typography, Upload } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport DashboardApi from '../../../api/dashboard-api';\nimport iconProduct from '../../../assets/images/ic-layout-left-menu.svg';\nimport icReport from '../../../assets/images/ic-report.svg';\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport { EFilterType } from '../../../constants';\nimport formatMoney from '../../../utils/format-money';\nimport TimeFilter from '../components/time-filter';\nimport './dashboard-home.less';\n\ninterface Props {}\ninterface IDashboardReport {\n    date: string;\n    revenue: number;\n}\n\nconst ReportFinancial: FC<Props> = () => {\n    const [finance, setFinance] = useState<IDashboardReport[]>([]);\n    const page = useSelector((state: any) => state.store.page);\n\n    /**\n     * filter by week or month\n     * select the start of week/month and end of week/month to send to server\n     * api has supported\n     */\n    const [filterType, setFilterType] = useState<EFilterType>(EFilterType.WEEK);\n\n    const options = (\n        data: Array<{ date: string; revenue: number }>,\n        name: string,\n        color: string,\n    ): Highcharts.Options => ({\n        title: { text: '' },\n        subtitle: { text: '' },\n        xAxis: {\n            categories:\n                filterType === EFilterType.WEEK\n                    ? ['M', 'T', 'W', 'T', 'F', 'S', 'S']\n                    : data.map((e) => e.date.split('/')[0]),\n        },\n        yAxis: { title: { text: '' } },\n        series: [\n            {\n                name,\n                type: 'column',\n                data: data.map((e) => e.revenue),\n            },\n        ],\n        chart: {\n            height: 250,\n        },\n        colors: [color],\n        plotOptions: {\n            column: {\n                borderRadius: 5,\n                pointWidth: filterType === EFilterType.WEEK ? 20 : undefined,\n            },\n        },\n    });\n    const requestOrder = async () => {\n        const startTime = moment().startOf(filterType).valueOf().toString();\n        const endTime = moment().endOf(filterType).valueOf().toString();\n\n        Promise.all([\n            DashboardApi.loadReport({\n                type: 'finance',\n                startTime,\n                endTime,\n            }).then((resFinance) => setFinance(resFinance)),\n        ]).catch((e) => message.error(e.message || 'Something went wrong'));\n    };\n    const dataSource = (finance || []).map((store: any, index: number) => ({\n        ...store,\n        index: (page - 1) * 10 + index + 1,\n    }));\n\n    const columns: ColumnsType<[]> = [\n        { title: 'STT', dataIndex: 'index', key: 'index', align: 'center' },\n        {\n            title: 'Ngày',\n            dataIndex: 'date',\n            key: 'date',\n        },\n\n        {\n            title: 'Doanh thu',\n            dataIndex: 'revenue',\n            key: 'revenue',\n            render: (revenue: number) => formatMoney(revenue),\n        },\n    ];\n\n    useEffect(() => {\n        requestOrder();\n    }, [filterType]);\n\n    return (\n        <div>\n            <PageTopWrapper\n                leftContent={<Typography.Title level={3}>Báo cáo tài chính</Typography.Title>}\n                rightContent={\n                    <>\n                        <TimeFilter filterType={filterType} setFilterType={setFilterType} />\n                        <Upload>\n                            <Button style={{ marginLeft: '5px' }}>\n                                <UploadOutlined />\n                                Nhập file\n                            </Button>\n                        </Upload>\n                    </>\n                }\n            />\n            <Row gutter={[30, 22]} style={{ padding: 20 }}>\n                <Col span={24}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={icReport} alt='' />\n                                <Typography.Text>Thống kê bằng biểu đồ</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={options(finance, 'Doanh thu', '#41a2ff')}\n                        />\n                    </Card>\n                </Col>\n                <Col span={24}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={iconProduct} alt='' />\n                                <Typography.Text>Thống kê bằng bảng số liệu</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <Table dataSource={dataSource} columns={columns} />\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default ReportFinancial;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/report-customer.tsx",["371"],"import { UploadOutlined } from '@ant-design/icons';\nimport { Button, Card, Col, message, Row, Space, Table, Typography, Upload } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport DashboardApi from '../../../api/dashboard-api';\nimport iconProduct from '../../../assets/images/ic-layout-left-menu.svg';\nimport icReport from '../../../assets/images/ic-report.svg';\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport { EFilterType } from '../../../constants';\nimport TimeFilter from '../components/time-filter';\nimport './dashboard-home.less';\n\ninterface Props {}\ninterface IDashboardReport {\n    data: Array<{ date: string; value: number }>;\n    total: number;\n}\nconst ReportCustomer: FC<Props> = () => {\n    const [user, setUser] = useState<IDashboardReport>({ data: [], total: 0 });\n    const page = useSelector((state: any) => state.store.page);\n\n    /**\n     * filter by week or month\n     * select the start of week/month and end of week/month to send to server\n     * api has supported\n     */\n    const [filterType, setFilterType] = useState<EFilterType>(EFilterType.WEEK);\n\n    const options = (\n        data: Array<{ date: string; value: number }>,\n        name: string,\n        color: string,\n    ): Highcharts.Options => ({\n        title: { text: '' },\n        subtitle: { text: '' },\n        xAxis: {\n            categories:\n                filterType === EFilterType.WEEK\n                    ? ['M', 'T', 'W', 'T', 'F', 'S', 'S']\n                    : data.map((e) => e.date.split('/')[0]),\n        },\n        yAxis: { title: { text: '' } },\n        series: [\n            {\n                name,\n                type: 'column',\n                data: data.map((e) => e.value),\n            },\n        ],\n        chart: {\n            height: 250,\n        },\n        colors: [color],\n        plotOptions: {\n            column: {\n                borderRadius: 5,\n                pointWidth: filterType === EFilterType.WEEK ? 20 : undefined,\n            },\n        },\n    });\n    const requestOrder = async () => {\n        const startTime = moment().startOf(filterType).valueOf().toString();\n        const endTime = moment().endOf(filterType).valueOf().toString();\n\n        Promise.all([\n            DashboardApi.loadReport({\n                type: 'new-users',\n                startTime,\n                endTime,\n            }).then((resUser) => setUser(resUser)),\n        ]).catch((e) => message.error(e.message || 'Something went wrong'));\n    };\n\n    const dataSource = (user.data || []).map((store: any, index: number) => ({\n        ...store,\n        index: (page - 1) * 10 + index + 1,\n    }));\n\n    const columns: ColumnsType<[]> = [\n        { title: 'STT', dataIndex: 'index', key: 'index', align: 'center' },\n        {\n            title: 'Ngày',\n            dataIndex: 'date',\n            key: 'date',\n        },\n\n        {\n            title: 'Số lượng khách hàng',\n            dataIndex: 'value',\n            key: 'value',\n        },\n    ];\n\n    useEffect(() => {\n        requestOrder();\n    }, [filterType]);\n\n    return (\n        <div>\n            <PageTopWrapper\n                leftContent={<Typography.Title level={3}>Báo cáo khách hàng</Typography.Title>}\n                rightContent={\n                    <>\n                        <TimeFilter filterType={filterType} setFilterType={setFilterType} />\n                        <Upload>\n                            <Button style={{ marginLeft: '5px' }}>\n                                <UploadOutlined />\n                                Nhập file\n                            </Button>\n                        </Upload>\n                    </>\n                }\n            />\n            <Row gutter={[30, 22]} style={{ padding: 20 }}>\n                <Col span={24}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={icReport} alt='' />\n\n                                <Typography.Text>Thống kê bằng biểu đồ</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={options(user.data, 'Số lượng người dùng mới', '#28c8d3')}\n                        />\n                    </Card>\n                </Col>\n                <Col span={24}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={iconProduct} alt='' />\n\n                                <Typography.Text>Thống kê theo bảng</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <Table dataSource={dataSource} columns={columns} />\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default ReportCustomer;\n","/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/time-filter.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/chart.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/fanpages.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/members.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/packages.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/utils/format.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/models/businessTypes.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/models/fanpage.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/models/staff.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/components/back-link/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/components/select-package/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/package.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/table-insa/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/utils/convert.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/models/store.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/utils/get-time.ts",[],"/Users/mac3/Desktop/workspace/AdminClient/src/assets/icon/index.tsx",[],"/Users/mac3/Desktop/workspace/AdminClient/src/assets/icon/svg.tsx",[],{"ruleId":"372","replacedBy":"373"},{"ruleId":"374","replacedBy":"375"},{"ruleId":"376","severity":1,"message":"377","line":24,"column":8,"nodeType":"378","endLine":24,"endColumn":10,"suggestions":"379"},{"ruleId":"380","severity":1,"message":"381","line":65,"column":15,"nodeType":"382","messageId":"383","endLine":65,"endColumn":23},{"ruleId":"384","severity":1,"message":"385","line":94,"column":1,"nodeType":"386","endLine":98,"endColumn":3},{"ruleId":"384","severity":1,"message":"385","line":127,"column":1,"nodeType":"386","endLine":133,"endColumn":3},{"ruleId":"384","severity":1,"message":"385","line":38,"column":1,"nodeType":"386","endLine":40,"endColumn":3},{"ruleId":"384","severity":1,"message":"385","line":55,"column":1,"nodeType":"386","endLine":58,"endColumn":3},{"ruleId":"376","severity":1,"message":"387","line":100,"column":8,"nodeType":"378","endLine":100,"endColumn":20,"suggestions":"388"},{"ruleId":"376","severity":1,"message":"389","line":38,"column":8,"nodeType":"378","endLine":38,"endColumn":44,"suggestions":"390"},{"ruleId":"376","severity":1,"message":"389","line":38,"column":8,"nodeType":"378","endLine":38,"endColumn":46,"suggestions":"391"},{"ruleId":"376","severity":1,"message":"392","line":43,"column":8,"nodeType":"378","endLine":43,"endColumn":10,"suggestions":"393"},{"ruleId":"376","severity":1,"message":"394","line":29,"column":8,"nodeType":"378","endLine":29,"endColumn":10,"suggestions":"395"},{"ruleId":"384","severity":1,"message":"385","line":31,"column":1,"nodeType":"386","endLine":33,"endColumn":3},{"ruleId":"384","severity":1,"message":"385","line":1,"column":1,"nodeType":"386","endLine":7,"endColumn":3},{"ruleId":"380","severity":1,"message":"396","line":110,"column":12,"nodeType":"382","messageId":"383","endLine":110,"endColumn":23},{"ruleId":"376","severity":1,"message":"397","line":134,"column":8,"nodeType":"378","endLine":134,"endColumn":44,"suggestions":"398"},{"ruleId":"380","severity":1,"message":"399","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":16},{"ruleId":"380","severity":1,"message":"400","line":28,"column":24,"nodeType":"382","messageId":"383","endLine":28,"endColumn":35},{"ruleId":"380","severity":1,"message":"401","line":28,"column":37,"nodeType":"382","messageId":"383","endLine":28,"endColumn":59},{"ruleId":"376","severity":1,"message":"387","line":102,"column":8,"nodeType":"378","endLine":102,"endColumn":20,"suggestions":"402"},{"ruleId":"376","severity":1,"message":"387","line":100,"column":8,"nodeType":"378","endLine":100,"endColumn":20,"suggestions":"403"},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["406"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'requestOrder'. Either include it or remove the dependency array.",["407"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["408"],["409"],"React Hook useEffect has a missing dependency: 'saveAndLoadUser'. Either include it or remove the dependency array.",["410"],"React Hook useEffect has missing dependencies: 'isLogout' and 'location.state'. Either include them or remove the dependency array.",["411"],"'selectedKey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'storeId'. Either include them or remove the dependency array.",["412"],"'Button' is defined but never used.","'shipmentFee' is assigned a value but never used.","'shipmentFeeForCustomer' is assigned a value but never used.",["413"],["414"],"no-global-assign","no-unsafe-negation",{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"423","fix":"424"},{"desc":"425","fix":"426"},{"desc":"427","fix":"428"},{"desc":"417","fix":"429"},{"desc":"417","fix":"430"},"Update the dependencies array to be: [dispatch, token]",{"range":"431","text":"432"},"Update the dependencies array to be: [filterType, requestOrder]",{"range":"433","text":"434"},"Update the dependencies array to be: [page, limit, sort, direction, name, dispatch]",{"range":"435","text":"436"},"Update the dependencies array to be: [page, limit, sort, direction, search, dispatch]",{"range":"437","text":"438"},"Update the dependencies array to be: [saveAndLoadUser]",{"range":"439","text":"440"},"Update the dependencies array to be: [isLogout, location.state]",{"range":"441","text":"442"},"Update the dependencies array to be: [page, limit, sort, direction, name, dispatch, storeId]",{"range":"443","text":"444"},{"range":"445","text":"434"},{"range":"446","text":"434"},[830,832],"[dispatch, token]",[3471,3483],"[filterType, requestOrder]",[1297,1333],"[page, limit, sort, direction, name, dispatch]",[1262,1300],"[page, limit, sort, direction, search, dispatch]",[1437,1439],"[saveAndLoadUser]",[1006,1008],"[isLogout, location.state]",[3834,3870],"[page, limit, sort, direction, name, dispatch, storeId]",[3349,3361],[3269,3281]]