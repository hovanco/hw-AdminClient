{"ast":null,"code":"import axios from './axios-client';\n\nasync function loadFanpage({\n  limit = 10,\n  page = 1,\n  name,\n  sort = 'createdAt',\n  direction = 'desc'\n}) {\n  const url = `/administrator/v1/fbpages`;\n  const params = {\n    limit,\n    page,\n    name,\n    sort,\n    direction\n  };\n  const response = await axios({\n    method: 'GET',\n    url,\n    params\n  });\n  return response;\n}\n\nasync function updateFanpageRequest({\n  expiredAt,\n  fanpageId\n}) {\n  const url = `/administrator/v1/fbpages/${fanpageId}`;\n  const data = {\n    expiredAt\n  };\n  const response = await axios({\n    method: 'PUT',\n    url,\n    data\n  });\n  return response;\n}\n\nexport default {\n  loadFanpage,\n  updateFanpageRequest\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/api/fanpage-api.ts"],"names":["axios","loadFanpage","limit","page","name","sort","direction","url","params","response","method","updateFanpageRequest","expiredAt","fanpageId","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,eAAeC,WAAf,CAA2B;AACvBC,EAAAA,KAAK,GAAG,EADe;AAEvBC,EAAAA,IAAI,GAAG,CAFgB;AAGvBC,EAAAA,IAHuB;AAIvBC,EAAAA,IAAI,GAAG,WAJgB;AAKvBC,EAAAA,SAAS,GAAG;AALW,CAA3B,EAYiB;AACb,QAAMC,GAAG,GAAI,2BAAb;AAEA,QAAMC,MAAM,GAAG;AACXN,IAAAA,KADW;AAEXC,IAAAA,IAFW;AAGXC,IAAAA,IAHW;AAIXC,IAAAA,IAJW;AAKXC,IAAAA;AALW,GAAf;AAQA,QAAMG,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,IAAAA,MAAM,EAAE,KADiB;AAEzBH,IAAAA,GAFyB;AAGzBC,IAAAA;AAHyB,GAAD,CAA5B;AAMA,SAAOC,QAAP;AACH;;AAED,eAAeE,oBAAf,CAAoC;AAChCC,EAAAA,SADgC;AAEhCC,EAAAA;AAFgC,CAApC,EAMiB;AACb,QAAMN,GAAG,GAAI,6BAA4BM,SAAU,EAAnD;AAEA,QAAMC,IAAI,GAAG;AACTF,IAAAA;AADS,GAAb;AAIA,QAAMH,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,IAAAA,MAAM,EAAE,KADiB;AAEzBH,IAAAA,GAFyB;AAGzBO,IAAAA;AAHyB,GAAD,CAA5B;AAKA,SAAOL,QAAP;AACH;;AAED,eAAe;AACXR,EAAAA,WADW;AAEXU,EAAAA;AAFW,CAAf","sourcesContent":["import axios from './axios-client';\n\nasync function loadFanpage({\n    limit = 10,\n    page = 1,\n    name,\n    sort = 'createdAt',\n    direction = 'desc',\n}: {\n    limit?: number;\n    page?: number;\n    name?: number;\n    sort?: string;\n    direction?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages`;\n\n    const params = {\n        limit,\n        page,\n        name,\n        sort,\n        direction,\n    };\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        params,\n    });\n\n    return response;\n}\n\nasync function updateFanpageRequest({\n    expiredAt,\n    fanpageId,\n}: {\n    expiredAt: string;\n    fanpageId: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages/${fanpageId}`;\n\n    const data = {\n        expiredAt,\n    };\n\n    const response = await axios({\n        method: 'PUT',\n        url,\n        data,\n    });\n    return response;\n}\n\nexport default {\n    loadFanpage,\n    updateFanpageRequest,\n};\n"]},"metadata":{},"sourceType":"module"}