{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/fanpages.tsx\",\n    _s = $RefreshSig$();\n\nimport { FacebookOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Tag } from 'antd';\nimport { get } from 'lodash';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport fanpageApi from '../../../../api/fanpage-api';\nimport { CStatus } from '../../../../models/fanpage';\nimport InsaTable from '../../components/table-insa';\nimport './fanpages.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limit = 5;\n\nconst FanPages = ({\n  storeId\n}) => {\n  _s();\n\n  const [page, setPage] = useState(1);\n  const [pages, setPages] = useState();\n  const [loading, setLoading] = useState(true);\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    async function getFanPages() {\n      try {\n        setLoading(true);\n        const data = await fanpageApi.getFanPagesByStoreId({\n          limit,\n          page,\n          storeId\n        });\n        setPages(get(data, 'pages', []));\n        setTotal(get(data, 'total', 0));\n      } catch (err) {} finally {\n        setLoading(false);\n      }\n    }\n\n    getFanPages();\n  }, [storeId, page]);\n\n  const onChangPagination = page => {\n    setPage(page);\n  };\n\n  const renderStatus = active => {\n    const key = active ? 'active' : 'inactive';\n    const color = active ? 'processing' : 'default';\n    return /*#__PURE__*/_jsxDEV(Tag, {\n      color: color,\n      children: CStatus[key].label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderLink = link => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: link,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: [\"\\u0110i t\\u1EDBi trang \", /*#__PURE__*/_jsxDEV(LinkOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  };\n\n  const columns = [{\n    title: 'Avatar',\n    dataIndex: 'picture',\n    key: 'picture',\n    align: 'center',\n    width: '10%',\n    render: () => /*#__PURE__*/_jsxDEV(FacebookOutlined, {\n      size: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 27\n    }, this)\n  }, {\n    title: 'Tên',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Link',\n    dataIndex: 'link',\n    key: 'link',\n    width: '20%',\n    render: renderLink\n  }, {\n    title: 'Tình trạng',\n    dataIndex: 'active',\n    key: 'active',\n    width: '20%',\n    render: renderStatus\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    render: createdAt => moment(createdAt).format('DD/MM/YYYY'),\n    width: '10%'\n  }];\n  return /*#__PURE__*/_jsxDEV(InsaTable, {\n    loading: loading,\n    columns: columns,\n    dataSource: pages,\n    className: \"order-tbl hover\",\n    rowKey: \"_id\",\n    pagination: {\n      pageSize: limit,\n      current: page,\n      total: total,\n      onChange: onChangPagination\n    },\n    isShowTotal: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FanPages, \"1Pc4LnwT7DiysQfU+ClGa/eqbsA=\");\n\n_c = FanPages;\nexport default FanPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"FanPages\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/detailStore/fanpages.tsx"],"names":["FacebookOutlined","LinkOutlined","Tag","get","moment","React","useEffect","useState","fanpageApi","CStatus","InsaTable","limit","FanPages","storeId","page","setPage","pages","setPages","loading","setLoading","total","setTotal","getFanPages","data","getFanPagesByStoreId","err","onChangPagination","renderStatus","active","key","color","label","renderLink","link","columns","title","dataIndex","align","width","render","createdAt","format","pageSize","current","onChange"],"mappings":"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","sourcesContent":["import { FacebookOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Tag } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { get } from 'lodash';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport fanpageApi from '../../../../api/fanpage-api';\nimport { CStatus, IFanPage } from '../../../../models/fanpage';\nimport InsaTable from '../../components/table-insa';\nimport './fanpages.less';\n\nconst limit = 5;\ninterface Props {\n    storeId: string;\n}\n\nconst FanPages: FC<Props> = ({ storeId }) => {\n    const [page, setPage] = useState<number>(1);\n    const [pages, setPages] = useState<IFanPage[]>();\n    const [loading, setLoading] = useState<boolean>(true);\n    const [total, setTotal] = useState<number>(0);\n\n    useEffect(() => {\n        async function getFanPages() {\n            try {\n                setLoading(true);\n\n                const data = await fanpageApi.getFanPagesByStoreId({\n                    limit,\n                    page,\n                    storeId,\n                });\n\n                setPages(get(data, 'pages', []));\n                setTotal(get(data, 'total', 0));\n            } catch (err) {\n\n            } finally {\n                setLoading(false);\n            }\n        }\n\n        getFanPages();\n    }, [storeId, page]);\n\n    const onChangPagination = (page: number) => {\n        setPage(page);\n    };\n\n    const renderStatus = (active: boolean) => {\n        const key = active ? 'active' : 'inactive';\n        const color = active ? 'processing' : 'default';\n        return (\n            <Tag color={color}>{CStatus[key].label}</Tag>\n        )\n    }\n\n    const renderLink = (link: string) => {\n        return (\n            <a href={link} target=\"_blank\" rel=\"noreferrer\">\n                Đi tới trang <LinkOutlined />\n            </a>\n        )\n    }\n\n    const columns: ColumnsType<[]> = [\n        {\n            title: 'Avatar',\n            dataIndex: 'picture',\n            key: 'picture',\n            align: 'center',\n            width: '10%',\n            render: () => <FacebookOutlined size={24} />\n        },\n        {\n            title: 'Tên',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Link',\n            dataIndex: 'link',\n            key: 'link',\n            width: '20%',\n            render: renderLink,\n        },\n        {\n            title: 'Tình trạng',\n            dataIndex: 'active',\n            key: 'active',\n            width: '20%',\n            render: renderStatus,\n        },\n        {\n            title: 'Ngày tạo',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            render: (createdAt: any) => moment(createdAt).format('DD/MM/YYYY'),\n            width: '10%',\n        },\n    ];\n\n    return (\n        <InsaTable\n            loading={loading}\n            columns={columns}\n            dataSource={pages}\n            className='order-tbl hover'\n            rowKey='_id'\n            pagination={{\n                pageSize: limit,\n                current: page,\n                total: total,\n                onChange: onChangPagination,\n            }}\n            isShowTotal\n        />\n    );\n};\n\nexport default FanPages;\n"]},"metadata":{},"sourceType":"module"}