{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/dashboard-home.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Col, Divider, message, Row, Select, Space, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport iconStore from \"../../../assets/images/ic-dashboard-store.svg\";\nimport iconUser from \"../../../assets/images/ic-dashboard-user.svg\";\nimport iconOrder from \"../../../assets/images/ic-dashboard-order.svg\";\nimport imgOrder from \"../../../assets/images/img-dashboard-order.svg\";\nimport imgUser from \"../../../assets/images/img-dashboard-user.svg\";\nimport imgStore from \"../../../assets/images/img-dashboard-store.svg\";\nimport './dashboard-home.less';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport DashboardApi from '../../../api/dashboard-api';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardHome = props => {\n  _s();\n\n  const [order, setOrder] = useState({\n    data: [],\n    total: 0\n  });\n  const [user, setUser] = useState({\n    data: [],\n    total: 0\n  });\n  const [store, setStore] = useState({\n    data: [],\n    total: 0\n  });\n  /**\n   * filter by week or month\n   * select the start of week/month and end of week/month to send to server\n   * api has supported\n   */\n\n  const [filterType, setFilterType] = useState('isoWeek');\n  const filterTypeOptions = [{\n    value: 'isoWeek',\n    label: 'Theo tuần'\n  }, {\n    value: 'month',\n    label: 'Theo tháng'\n  }];\n\n  const options = (data, name, color) => ({\n    title: {\n      text: ''\n    },\n    subtitle: {\n      text: ''\n    },\n    xAxis: {\n      categories: filterType === 'isoWeek' ? ['M', 'T', 'W', 'T', 'F', 'S', 'S'] : data.map(e => e.date.split('/')[0])\n    },\n    yAxis: {\n      title: {\n        text: ''\n      }\n    },\n    series: [{\n      name,\n      type: 'column',\n      data: data.map(e => e.value)\n    }],\n    chart: {\n      height: 250\n    },\n    colors: [color],\n    plotOptions: {\n      column: {\n        borderRadius: 5,\n        pointWidth: filterType === 'isoWeek' ? 20 : undefined\n      }\n    }\n  });\n\n  const requestOrder = async () => {\n    const startTime = moment().startOf(filterType).valueOf().toString();\n    const endTime = moment().endOf(filterType).valueOf().toString();\n    Promise.all([DashboardApi.loadReport({\n      type: 'new-orders',\n      startTime,\n      endTime\n    }).then(resOrder => setOrder(resOrder)), DashboardApi.loadReport({\n      type: 'new-users',\n      startTime,\n      endTime\n    }).then(resUser => setUser(resUser)), DashboardApi.loadReport({\n      type: 'new-stores',\n      startTime,\n      endTime\n    }).then(resStore => setStore(resStore))]).catch(e => message.error(e.message || 'Something went wrong'));\n  };\n\n  useEffect(() => {\n    requestOrder();\n  }, [filterType]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTopWrapper, {\n      leftContent: /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 3,\n        children: \"T\\u1ED4NG QUAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 30\n      }, this),\n      rightContent: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Theo tu\\u1EA7n\",\n        value: filterType,\n        onChange: value => setFilterType(value),\n        children: filterTypeOptions.map(item => /*#__PURE__*/_jsxDEV(Select.Option, {\n          value: item.value,\n          children: item.label\n        }, item.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [30, 22],\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [20, 0],\n          style: {\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card-summary yellow\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgOrder,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: order.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n                className: \"text\",\n                children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng \\u0111\\u01A1n\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 37\n                }, this), \" \\u0111\\u1EB7t h\\xE0ng\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card-summary blue\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgStore,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: store.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n                className: \"text\",\n                children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), \"c\\u1EEDa h\\xE0ng\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dashboard-card-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgUser,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"title\",\n                children: user.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n                className: \"text\",\n                children: [\"S\\u1ED1 l\\u01B0\\u1EE3ng\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 37\n                }, this), \"ng\\u01B0\\u1EDDi d\\xF9ng\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dashboard-card-chart\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconStore,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              children: \"S\\u1ED1 l\\u01B0\\u1EE3ng c\\u1EEDa h\\xE0ng m\\u1EDBi trong tu\\u1EA7n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 29\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            options: options(store.data, 'Số lượng cửa hàng mới', '#41a2ff')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dashboard-card-chart\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconUser,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              children: \"S\\u1ED1 l\\u01B0\\u1EE3ng ng\\u01B0\\u1EDDi d\\xF9ng m\\u1EDBi trong tu\\u1EA7n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 29\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            options: options(user.data, 'Số lượng người dùng mới', '#28c8d3')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dashboard-card-chart\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconOrder,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              children: \"S\\u1ED1 l\\u01B0\\u1EE3ng \\u0111\\u01A1n h\\xE0ng m\\u1EDBi trong tu\\u1EA7n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            options: options(order.data, 'Số lượng đơn hàng mới', '#6c6fbf')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DashboardHome, \"wj9QL3Lx/5p8SxnTxonwf+ADrNs=\");\n\n_c = DashboardHome;\nexport default DashboardHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardHome\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/dashboard-home.tsx"],"names":["Card","Col","Divider","message","Row","Select","Space","Typography","React","useEffect","useState","PageTopWrapper","HighchartsReact","Highcharts","DashboardApi","moment","DashboardHome","props","order","setOrder","data","total","user","setUser","store","setStore","filterType","setFilterType","filterTypeOptions","value","label","options","name","color","title","text","subtitle","xAxis","categories","map","e","date","split","yAxis","series","type","chart","height","colors","plotOptions","column","borderRadius","pointWidth","undefined","requestOrder","startTime","startOf","valueOf","toString","endTime","endOf","Promise","all","loadReport","then","resOrder","resUser","resStore","catch","error","item","padding","imgOrder","imgStore","imgUser","iconStore","iconUser","iconOrder"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,OAApB,EAA6BC,OAA7B,EAAsCC,GAAtC,EAA2CC,MAA3C,EAAmDC,KAAnD,EAA0DC,UAA1D,QAA4E,MAA5E;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;;;;;AAOA,OAAO,uBAAP;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAQA,MAAMC,aAAa,GAAIC,KAAD,IAAkB;AAAA;;AACpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAmB;AAAEU,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAnB,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAmB;AAAEU,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAnB,CAAhC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAmB;AAAEU,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAnB,CAAlC;AACA;AACJ;AACA;AACA;AACA;;AACI,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAsB,SAAtB,CAA5C;AACA,QAAMkB,iBAAiB,GAAG,CACtB;AACIC,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADsB,EAKtB;AACID,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,KAAK,EAAE;AAFX,GALsB,CAA1B;;AAWA,QAAMC,OAAO,GAAG,CACZX,IADY,EAEZY,IAFY,EAGZC,KAHY,MAIU;AACtBC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADe;AAEtBC,IAAAA,QAAQ,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR,KAFY;AAGtBE,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EACNZ,UAAU,KAAK,SAAf,GACM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CADN,GAEMN,IAAI,CAACmB,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAhB;AAJP,KAHe;AAStBC,IAAAA,KAAK,EAAE;AAAET,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAT,KATe;AAUtBS,IAAAA,MAAM,EAAE,CACJ;AACIZ,MAAAA,IADJ;AAEIa,MAAAA,IAAI,EAAE,QAFV;AAGIzB,MAAAA,IAAI,EAAEA,IAAI,CAACmB,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACX,KAAlB;AAHV,KADI,CAVc;AAiBtBiB,IAAAA,KAAK,EAAE;AACHC,MAAAA,MAAM,EAAE;AADL,KAjBe;AAoBtBC,IAAAA,MAAM,EAAE,CAACf,KAAD,CApBc;AAqBtBgB,IAAAA,WAAW,EAAE;AACTC,MAAAA,MAAM,EAAE;AACJC,QAAAA,YAAY,EAAE,CADV;AAEJC,QAAAA,UAAU,EAAE1B,UAAU,KAAK,SAAf,GAA2B,EAA3B,GAAgC2B;AAFxC;AADC;AArBS,GAJV,CAAhB;;AAgCA,QAAMC,YAAY,GAAG,YAAY;AAC7B,UAAMC,SAAiB,GAAGxC,MAAM,GAAGyC,OAAT,CAAiB9B,UAAjB,EAA6B+B,OAA7B,GAAuCC,QAAvC,EAA1B;AACA,UAAMC,OAAe,GAAG5C,MAAM,GAAG6C,KAAT,CAAelC,UAAf,EAA2B+B,OAA3B,GAAqCC,QAArC,EAAxB;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,CACRhD,YAAY,CAACiD,UAAb,CAAwB;AACpBlB,MAAAA,IAAI,EAAE,YADc;AAEpBU,MAAAA,SAFoB;AAGpBI,MAAAA;AAHoB,KAAxB,EAIGK,IAJH,CAISC,QAAD,IAAc9C,QAAQ,CAAC8C,QAAD,CAJ9B,CADQ,EAMRnD,YAAY,CAACiD,UAAb,CAAwB;AACpBlB,MAAAA,IAAI,EAAE,WADc;AAEpBU,MAAAA,SAFoB;AAGpBI,MAAAA;AAHoB,KAAxB,EAIGK,IAJH,CAISE,OAAD,IAAa3C,OAAO,CAAC2C,OAAD,CAJ5B,CANQ,EAWRpD,YAAY,CAACiD,UAAb,CAAwB;AACpBlB,MAAAA,IAAI,EAAE,YADc;AAEpBU,MAAAA,SAFoB;AAGpBI,MAAAA;AAHoB,KAAxB,EAIGK,IAJH,CAISG,QAAD,IAAc1C,QAAQ,CAAC0C,QAAD,CAJ9B,CAXQ,CAAZ,EAgBGC,KAhBH,CAgBU5B,CAAD,IAAOrC,OAAO,CAACkE,KAAR,CAAc7B,CAAC,CAACrC,OAAF,IAAa,sBAA3B,CAhBhB;AAiBH,GArBD;;AAuBAM,EAAAA,SAAS,CAAC,MAAM;AACZ6C,IAAAA,YAAY;AACf,GAFQ,EAEN,CAAC5B,UAAD,CAFM,CAAT;AAIA,sBACI;AAAA,4BACI,QAAC,cAAD;AACI,MAAA,WAAW,eAAE,QAAC,UAAD,CAAY,KAAZ;AAAkB,QAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADjB;AAEI,MAAA,YAAY,eACR,QAAC,MAAD;AACI,QAAA,WAAW,EAAC,gBADhB;AAEI,QAAA,KAAK,EAAEA,UAFX;AAGI,QAAA,QAAQ,EAAGG,KAAD,IAAWF,aAAa,CAACE,KAAD,CAHtC;AAAA,kBAKKD,iBAAiB,CAACW,GAAlB,CAAuB+B,IAAD,iBACnB,QAAC,MAAD,CAAQ,MAAR;AAAgC,UAAA,KAAK,EAAEA,IAAI,CAACzC,KAA5C;AAAA,oBACKyC,IAAI,CAACxC;AADV,WAAoBwC,IAAI,CAACzC,KAAzB;AAAA;AAAA;AAAA;AAAA,gBADH;AALL;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAuB,MAAA,KAAK,EAAE;AAAE0C,QAAAA,OAAO,EAAE;AAAX,OAA9B;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAAL,CAAb;AAAsB,UAAA,KAAK,EAAE;AAAExB,YAAAA,MAAM,EAAE;AAAV,WAA7B;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,+BAAf;AAAA,sCACI;AAAK,gBAAA,GAAG,EAAEyB,QAAV;AAAoB,gBAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC,OAAb;AAAA,0BAAsBtD,KAAK,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,UAAD,CAAY,IAAZ;AAAiB,gBAAA,SAAS,EAAC,MAA3B;AAAA,iFAEI;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAYI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,6BAAf;AAAA,sCACI;AAAK,gBAAA,GAAG,EAAEoD,QAAV;AAAoB,gBAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC,OAAb;AAAA,0BAAsBjD,KAAK,CAACH;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,UAAD,CAAY,IAAZ;AAAiB,gBAAA,SAAS,EAAC,MAA3B;AAAA,mEAEI;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAwBI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,wBAAf;AAAA,sCACI;AAAK,gBAAA,GAAG,EAAEqD,OAAV;AAAmB,gBAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,gBAAA,SAAS,EAAC,OAAb;AAAA,0BAAsBpD,IAAI,CAACD;AAA3B;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,UAAD,CAAY,IAAZ;AAAiB,gBAAA,SAAS,EAAC,MAA3B;AAAA,mEAEI;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAwCI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,SAAS,EAAC,sBADd;AAEI,UAAA,KAAK,eACD,QAAC,KAAD;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEsD,SAAV;AAAqB,cAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAAA,iCASI,QAAC,eAAD;AACI,YAAA,UAAU,EAAE9D,UADhB;AAEI,YAAA,OAAO,EAAEkB,OAAO,CAACP,KAAK,CAACJ,IAAP,EAAa,uBAAb,EAAsC,SAAtC;AAFpB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxCJ,eAwDI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,SAAS,EAAC,sBADd;AAEI,UAAA,KAAK,eACD,QAAC,KAAD;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEwD,QAAV;AAAoB,cAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAAA,iCAWI,QAAC,eAAD;AACI,YAAA,UAAU,EAAE/D,UADhB;AAEI,YAAA,OAAO,EAAEkB,OAAO,CAACT,IAAI,CAACF,IAAN,EAAY,yBAAZ,EAAuC,SAAvC;AAFpB;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxDJ,eA0EI,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,SAAS,EAAC,sBADd;AAEI,UAAA,KAAK,eACD,QAAC,KAAD;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEyD,SAAV;AAAqB,cAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR;AAAA,iCASI,QAAC,eAAD;AACI,YAAA,UAAU,EAAEhE,UADhB;AAEI,YAAA,OAAO,EAAEkB,OAAO,CAACb,KAAK,CAACE,IAAP,EAAa,uBAAb,EAAsC,SAAtC;AAFpB;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1EJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA,kBADJ;AA+GH,CA/LD;;GAAMJ,a;;KAAAA,a;AAiMN,eAAeA,aAAf","sourcesContent":["import { Card, Col, Divider, message, Row, Select, Space, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport iconStore from '../../../assets/images/ic-dashboard-store.svg';\nimport iconUser from '../../../assets/images/ic-dashboard-user.svg';\nimport iconOrder from '../../../assets/images/ic-dashboard-order.svg';\nimport imgOrder from '../../../assets/images/img-dashboard-order.svg';\nimport imgUser from '../../../assets/images/img-dashboard-user.svg';\nimport imgStore from '../../../assets/images/img-dashboard-store.svg';\nimport './dashboard-home.less';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from 'highcharts';\nimport DashboardApi from '../../../api/dashboard-api';\nimport moment from 'moment';\n\ninterface Props {}\ninterface IDashboardReport {\n    data: Array<{ date: string; value: number }>;\n    total: number;\n}\n\nconst DashboardHome = (props: Props) => {\n    const [order, setOrder] = useState<IDashboardReport>({ data: [], total: 0 });\n    const [user, setUser] = useState<IDashboardReport>({ data: [], total: 0 });\n    const [store, setStore] = useState<IDashboardReport>({ data: [], total: 0 });\n    /**\n     * filter by week or month\n     * select the start of week/month and end of week/month to send to server\n     * api has supported\n     */\n    const [filterType, setFilterType] = useState<'isoWeek' | 'month'>('isoWeek');\n    const filterTypeOptions = [\n        {\n            value: 'isoWeek',\n            label: 'Theo tuần',\n        },\n        {\n            value: 'month',\n            label: 'Theo tháng',\n        },\n    ];\n\n    const options = (\n        data: Array<{ date: string; value: number }>,\n        name: string,\n        color: string\n    ): Highcharts.Options => ({\n        title: { text: '' },\n        subtitle: { text: '' },\n        xAxis: {\n            categories:\n                filterType === 'isoWeek'\n                    ? ['M', 'T', 'W', 'T', 'F', 'S', 'S']\n                    : data.map((e) => e.date.split('/')[0]),\n        },\n        yAxis: { title: { text: '' } },\n        series: [\n            {\n                name,\n                type: 'column',\n                data: data.map((e) => e.value),\n            },\n        ],\n        chart: {\n            height: 250,\n        },\n        colors: [color],\n        plotOptions: {\n            column: {\n                borderRadius: 5,\n                pointWidth: filterType === 'isoWeek' ? 20 : undefined,\n            },\n        },\n    });\n    const requestOrder = async () => {\n        const startTime: string = moment().startOf(filterType).valueOf().toString();\n        const endTime: string = moment().endOf(filterType).valueOf().toString();\n\n        Promise.all([\n            DashboardApi.loadReport({\n                type: 'new-orders',\n                startTime,\n                endTime,\n            }).then((resOrder) => setOrder(resOrder)),\n            DashboardApi.loadReport({\n                type: 'new-users',\n                startTime,\n                endTime,\n            }).then((resUser) => setUser(resUser)),\n            DashboardApi.loadReport({\n                type: 'new-stores',\n                startTime,\n                endTime,\n            }).then((resStore) => setStore(resStore)),\n        ]).catch((e) => message.error(e.message || 'Something went wrong'));\n    };\n\n    useEffect(() => {\n        requestOrder();\n    }, [filterType]);\n\n    return (\n        <>\n            <PageTopWrapper\n                leftContent={<Typography.Title level={3}>TỔNG QUAN</Typography.Title>}\n                rightContent={\n                    <Select\n                        placeholder='Theo tuần'\n                        value={filterType}\n                        onChange={(value) => setFilterType(value)}\n                    >\n                        {filterTypeOptions.map((item) => (\n                            <Select.Option key={item.value} value={item.value}>\n                                {item.label}\n                            </Select.Option>\n                        ))}\n                    </Select>\n                }\n            />\n            <Row gutter={[30, 22]} style={{ padding: 20 }}>\n                <Col span={12}>\n                    <Row gutter={[20, 0]} style={{ height: '100%' }}>\n                        <Col span={8}>\n                            <div className='dashboard-card-summary yellow'>\n                                <img src={imgOrder} alt='' />\n                                <p className='title'>{order.total}</p>\n                                <Divider />\n                                <Typography.Text className='text'>\n                                    Số lượng đơn\n                                    <br /> đặt hàng\n                                </Typography.Text>\n                            </div>\n                        </Col>\n                        <Col span={8}>\n                            <div className='dashboard-card-summary blue'>\n                                <img src={imgStore} alt='' />\n                                <p className='title'>{store.total}</p>\n                                <Divider />\n                                <Typography.Text className='text'>\n                                    Số lượng\n                                    <br />\n                                    cửa hàng\n                                </Typography.Text>\n                            </div>\n                        </Col>\n                        <Col span={8}>\n                            <div className='dashboard-card-summary'>\n                                <img src={imgUser} alt='' />\n                                <p className='title'>{user.total}</p>\n                                <Divider />\n                                <Typography.Text className='text'>\n                                    Số lượng\n                                    <br />\n                                    người dùng\n                                </Typography.Text>\n                            </div>\n                        </Col>\n                    </Row>\n                </Col>\n                <Col span={12}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={iconStore} alt='' />\n                                <Typography.Text>Số lượng cửa hàng mới trong tuần</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={options(store.data, 'Số lượng cửa hàng mới', '#41a2ff')}\n                        />\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={iconUser} alt='' />\n                                <Typography.Text>\n                                    Số lượng người dùng mới trong tuần\n                                </Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={options(user.data, 'Số lượng người dùng mới', '#28c8d3')}\n                        />\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={iconOrder} alt='' />\n                                <Typography.Text>Số lượng đơn hàng mới trong tuần</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={options(order.data, 'Số lượng đơn hàng mới', '#6c6fbf')}\n                        />\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default DashboardHome;\n"]},"metadata":{},"sourceType":"module"}