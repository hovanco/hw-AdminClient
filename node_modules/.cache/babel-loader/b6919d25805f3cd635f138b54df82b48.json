{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/report-customer.tsx\",\n    _s = $RefreshSig$();\n\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, Card, Col, message, Row, Space, Table, Typography, Upload } from 'antd';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport DashboardApi from '../../../api/dashboard-api';\nimport iconProduct from \"../../../assets/images/ic-layout-left-menu.svg\";\nimport icReport from \"../../../assets/images/ic-report.svg\";\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport { EFilterType } from '../../../constants';\nimport TimeFilter from '../components/time-filter';\nimport './dashboard-home.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ReportCustomer = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    data: [],\n    total: 0\n  });\n  const page = useSelector(state => state.store.page);\n  /**\n   * filter by week or month\n   * select the start of week/month and end of week/month to send to server\n   * api has supported\n   */\n\n  const [filterType, setFilterType] = useState(EFilterType.WEEK);\n\n  const options = (data, name, color) => ({\n    title: {\n      text: ''\n    },\n    subtitle: {\n      text: ''\n    },\n    xAxis: {\n      categories: filterType === EFilterType.WEEK ? ['M', 'T', 'W', 'T', 'F', 'S', 'S'] : data.map(e => e.date.split('/')[0])\n    },\n    yAxis: {\n      title: {\n        text: ''\n      }\n    },\n    series: [{\n      name,\n      type: 'column',\n      data: data.map(e => e.value)\n    }],\n    chart: {\n      height: 250\n    },\n    colors: [color],\n    plotOptions: {\n      column: {\n        borderRadius: 5,\n        pointWidth: filterType === EFilterType.WEEK ? 20 : undefined\n      }\n    }\n  });\n\n  const requestOrder = async () => {\n    const startTime = moment().startOf(filterType).valueOf().toString();\n    const endTime = moment().endOf(filterType).valueOf().toString();\n    Promise.all([DashboardApi.loadReport({\n      type: 'new-users',\n      startTime,\n      endTime\n    }).then(resUser => setUser(resUser))]).catch(e => message.error(e.message || 'Something went wrong'));\n  };\n\n  const dataSource = (user.data || []).map((store, index) => ({ ...store,\n    index: (page - 1) * 10 + index + 1\n  }));\n  const columns = [{\n    title: 'STT',\n    dataIndex: 'index',\n    key: 'index',\n    align: 'center'\n  }, {\n    title: 'Ngày',\n    dataIndex: 'date',\n    key: 'date'\n  }, {\n    title: 'Số lượng khách hàng',\n    dataIndex: 'value',\n    key: 'value'\n  }];\n  useEffect(() => {\n    requestOrder();\n  }, [filterType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PageTopWrapper, {\n      leftContent: /*#__PURE__*/_jsxDEV(Typography.Title, {\n        level: 3,\n        children: \"B\\xE1o c\\xE1o kh\\xE1ch h\\xE0ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 30\n      }, this),\n      rightContent: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TimeFilter, {\n          filterType: filterType,\n          setFilterType: setFilterType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Upload, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              marginLeft: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), \"Nh\\u1EADp file\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [30, 22],\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dashboard-card-chart\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: icReport,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              children: \"Th\\u1ED1ng k\\xEA b\\u1EB1ng bi\\u1EC3u \\u0111\\u1ED3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n            highcharts: Highcharts,\n            options: options(user.data, 'Số lượng người dùng mới', '#28c8d3')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dashboard-card-chart\",\n          title: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconProduct,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n              children: \"Th\\u1ED1ng k\\xEA theo b\\u1EA3ng\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: dataSource,\n            columns: columns\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReportCustomer, \"pdty5fQttKfjAQyoT65jaWw0o4Y=\", false, function () {\n  return [useSelector];\n});\n\n_c = ReportCustomer;\nexport default ReportCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportCustomer\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/pages/report-customer.tsx"],"names":["UploadOutlined","Button","Card","Col","message","Row","Space","Table","Typography","Upload","Highcharts","HighchartsReact","moment","React","useEffect","useState","useSelector","DashboardApi","PageTopWrapper","EFilterType","TimeFilter","ReportCustomer","user","setUser","data","total","page","state","store","filterType","setFilterType","WEEK","options","name","color","title","text","subtitle","xAxis","categories","map","e","date","split","yAxis","series","type","value","chart","height","colors","plotOptions","column","borderRadius","pointWidth","undefined","requestOrder","startTime","startOf","valueOf","toString","endTime","endOf","Promise","all","loadReport","then","resUser","catch","error","dataSource","index","columns","dataIndex","key","align","marginLeft","padding","icReport","iconProduct"],"mappings":"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","sourcesContent":["import { UploadOutlined } from '@ant-design/icons';\nimport { Button, Card, Col, message, Row, Space, Table, Typography, Upload } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport DashboardApi from '../../../api/dashboard-api';\nimport iconProduct from '../../../assets/images/ic-layout-left-menu.svg';\nimport icReport from '../../../assets/images/ic-report.svg';\nimport PageTopWrapper from '../../../components/page-top-wrapper';\nimport { EFilterType } from '../../../constants';\nimport TimeFilter from '../components/time-filter';\nimport './dashboard-home.less';\n\ninterface Props {}\ninterface IDashboardReport {\n    data: Array<{ date: string; value: number }>;\n    total: number;\n}\nconst ReportCustomer: FC<Props> = () => {\n    const [user, setUser] = useState<IDashboardReport>({ data: [], total: 0 });\n    const page = useSelector((state: any) => state.store.page);\n\n    /**\n     * filter by week or month\n     * select the start of week/month and end of week/month to send to server\n     * api has supported\n     */\n    const [filterType, setFilterType] = useState<EFilterType>(EFilterType.WEEK);\n\n    const options = (\n        data: Array<{ date: string; value: number }>,\n        name: string,\n        color: string,\n    ): Highcharts.Options => ({\n        title: { text: '' },\n        subtitle: { text: '' },\n        xAxis: {\n            categories:\n                filterType === EFilterType.WEEK\n                    ? ['M', 'T', 'W', 'T', 'F', 'S', 'S']\n                    : data.map((e) => e.date.split('/')[0]),\n        },\n        yAxis: { title: { text: '' } },\n        series: [\n            {\n                name,\n                type: 'column',\n                data: data.map((e) => e.value),\n            },\n        ],\n        chart: {\n            height: 250,\n        },\n        colors: [color],\n        plotOptions: {\n            column: {\n                borderRadius: 5,\n                pointWidth: filterType === EFilterType.WEEK ? 20 : undefined,\n            },\n        },\n    });\n    const requestOrder = async () => {\n        const startTime = moment().startOf(filterType).valueOf().toString();\n        const endTime = moment().endOf(filterType).valueOf().toString();\n\n        Promise.all([\n            DashboardApi.loadReport({\n                type: 'new-users',\n                startTime,\n                endTime,\n            }).then((resUser) => setUser(resUser)),\n        ]).catch((e) => message.error(e.message || 'Something went wrong'));\n    };\n\n    const dataSource = (user.data || []).map((store: any, index: number) => ({\n        ...store,\n        index: (page - 1) * 10 + index + 1,\n    }));\n\n    const columns: ColumnsType<[]> = [\n        { title: 'STT', dataIndex: 'index', key: 'index', align: 'center' },\n        {\n            title: 'Ngày',\n            dataIndex: 'date',\n            key: 'date',\n        },\n\n        {\n            title: 'Số lượng khách hàng',\n            dataIndex: 'value',\n            key: 'value',\n        },\n    ];\n\n    useEffect(() => {\n        requestOrder();\n    }, [filterType]);\n\n    return (\n        <div>\n            <PageTopWrapper\n                leftContent={<Typography.Title level={3}>Báo cáo khách hàng</Typography.Title>}\n                rightContent={\n                    <>\n                        <TimeFilter filterType={filterType} setFilterType={setFilterType} />\n                        <Upload>\n                            <Button style={{ marginLeft: '5px' }}>\n                                <UploadOutlined />\n                                Nhập file\n                            </Button>\n                        </Upload>\n                    </>\n                }\n            />\n            <Row gutter={[30, 22]} style={{ padding: 20 }}>\n                <Col span={24}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={icReport} alt='' />\n\n                                <Typography.Text>Thống kê bằng biểu đồ</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <HighchartsReact\n                            highcharts={Highcharts}\n                            options={options(user.data, 'Số lượng người dùng mới', '#28c8d3')}\n                        />\n                    </Card>\n                </Col>\n                <Col span={24}>\n                    <Card\n                        className='dashboard-card-chart'\n                        title={\n                            <Space>\n                                <img src={iconProduct} alt='' />\n\n                                <Typography.Text>Thống kê theo bảng</Typography.Text>\n                            </Space>\n                        }\n                    >\n                        <Table dataSource={dataSource} columns={columns} />\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default ReportCustomer;\n"]},"metadata":{},"sourceType":"module"}