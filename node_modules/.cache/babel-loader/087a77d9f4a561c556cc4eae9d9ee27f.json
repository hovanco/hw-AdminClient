{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/store-table.tsx\",\n    _s = $RefreshSig$();\n\nimport { ReloadOutlined, UserOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Col, Input, Row } from 'antd';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport InsaTable from '../components/table-insa';\nimport { loadStores, searchStore, updateSort } from '../state/storeSlide';\nimport './index.less';\nimport Action from './stores/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\n\nconst StoreTable = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const loading = useSelector(state => state.store.loading);\n  const stores = useSelector(state => state.store.stores);\n  const page = useSelector(state => state.store.page);\n  const limit = useSelector(state => state.store.limit);\n  const sort = useSelector(state => state.store.sort);\n  const direction = useSelector(state => state.store.direction);\n  const search = useSelector(state => state.store.search);\n  const [text, setText] = useState('');\n\n  const onSearch = value => {\n    dispatch(searchStore(value));\n  };\n\n  const onChangeText = e => {\n    setText(e.target.value);\n  };\n\n  const resetSearch = () => {\n    dispatch(searchStore(null));\n    setText('');\n  };\n\n  useEffect(() => {\n    dispatch(loadStores());\n  }, [dispatch, page, limit, sort, direction, search]);\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    const typeSortOrder = typeof sorter.order;\n    const data = {\n      page: pagination.current,\n      limit: pagination.pageSize,\n      sort: sorter.column ? sorter.field : 'undefined',\n      direction: typeSortOrder === 'string' ? sorter.order === 'ascend' ? 'asc' : 'desc' : 'undefined'\n    };\n    dispatch(updateSort(data));\n  };\n\n  const dataSource = (stores.data || []).map((store, index) => ({ ...store,\n    index: (page - 1) * 10 + index + 1\n  }));\n  const columns = [{\n    title: 'STT',\n    dataIndex: 'index',\n    key: 'index',\n    align: 'center'\n  }, {\n    title: 'Tên shop',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Chủ shop',\n    dataIndex: 'owner',\n    align: 'center',\n    key: 'owner',\n    render: owner => {\n      if (owner) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: owner.picture,\n            icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 63\n            }, this),\n            alt: owner.name,\n            children: owner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 5\n            },\n            children: owner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'SĐT',\n    dataIndex: 'phoneNo',\n    key: 'phoneNo'\n  }, {\n    title: 'Địa chỉ',\n    dataIndex: 'address',\n    key: 'address',\n    render: (address, record) => {\n      return `${address} - ${record.wardName} - ${record.districtName} - ${record.provinceName}`;\n    }\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'createdAt',\n    key: 'createdAt',\n    sorter: true,\n    render: createdAt => moment(createdAt).format('DD/MM/YYYY')\n  }, {\n    title: 'Chi Tiết',\n    key: 'createdAt',\n    render: record => /*#__PURE__*/_jsxDEV(Action, {\n      record: record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 38\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InsaTable, {\n      loading: loading,\n      columns: columns,\n      dataSource: dataSource,\n      bordered: true,\n      isShowTotal: true,\n      onChange: handleTableChange,\n      pagination: {\n        total: stores.total || 0,\n        showSizeChanger: false\n      },\n      name: \"Danh s\\xE1ch c\\u1EEDa h\\xE0ng\",\n      className: \"order-tbl hover\",\n      hasDefaultColumn: false,\n      rowKey: \"_id\",\n      headerExtend: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 15,\n        style: {\n          marginBottom: 15\n        },\n        align: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: \"T\\xECm ki\\u1EBFm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            value: text,\n            onChange: onChangeText,\n            onSearch: onSearch,\n            placeholder: \"T\\xECm ki\\u1EBFm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 43\n            }, this),\n            onClick: resetSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this),\n      onRow: item => {\n        return {\n          onClick: () => history.push(`/dashboard/shops/${item._id}`)\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(StoreTable, \"o6h2cZM8lK46BD36qvpUggF01gk=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = StoreTable;\nexport default StoreTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreTable\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/store-table.tsx"],"names":["ReloadOutlined","UserOutlined","Avatar","Button","Col","Input","Row","moment","React","useEffect","useState","useDispatch","useSelector","useHistory","InsaTable","loadStores","searchStore","updateSort","Action","Search","StoreTable","dispatch","history","loading","state","store","stores","page","limit","sort","direction","search","text","setText","onSearch","value","onChangeText","e","target","resetSearch","handleTableChange","pagination","filters","sorter","typeSortOrder","order","data","current","pageSize","column","field","dataSource","map","index","columns","title","dataIndex","key","align","render","owner","picture","name","marginTop","address","record","wardName","districtName","provinceName","createdAt","format","total","showSizeChanger","marginBottom","item","onClick","push","_id"],"mappings":"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","sourcesContent":["import { ReloadOutlined, UserOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Col, Input, Row } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { IStore } from '../../../models/billing';\nimport InsaTable from '../components/table-insa';\nimport { loadStores, searchStore, updateSort } from '../state/storeSlide';\nimport './index.less';\nimport Action from './stores/action';\n\nconst { Search } = Input;\n\nconst StoreTable = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const loading = useSelector((state: any) => state.store.loading);\n    const stores = useSelector((state: any) => state.store.stores);\n    const page = useSelector((state: any) => state.store.page);\n    const limit = useSelector((state: any) => state.store.limit);\n    const sort = useSelector((state: any) => state.store.sort);\n    const direction = useSelector((state: any) => state.store.direction);\n    const search = useSelector((state: any) => state.store.search);\n\n    const [text, setText] = useState('');\n\n    const onSearch = (value: string) => {\n        dispatch(searchStore(value));\n    };\n\n    const onChangeText = (e: any) => {\n        setText(e.target.value);\n    };\n\n    const resetSearch = () => {\n        dispatch(searchStore(null));\n        setText('');\n    };\n    useEffect(() => {\n        dispatch(loadStores());\n    }, [dispatch, page, limit, sort, direction, search]);\n\n    const handleTableChange = (pagination: any, filters: any, sorter: any) => {\n        const typeSortOrder = typeof sorter.order;\n        const data = {\n            page: pagination.current,\n            limit: pagination.pageSize,\n            sort: sorter.column ? sorter.field : 'undefined',\n            direction:\n                typeSortOrder === 'string'\n                    ? sorter.order === 'ascend'\n                        ? 'asc'\n                        : 'desc'\n                    : 'undefined',\n        };\n        dispatch(updateSort(data));\n    };\n\n    const dataSource = (stores.data || []).map((store: any, index: number) => ({\n        ...store,\n        index: (page - 1) * 10 + index + 1,\n    }));\n\n    const columns: ColumnsType<[]> = [\n        { title: 'STT', dataIndex: 'index', key: 'index', align: 'center' },\n        {\n            title: 'Tên shop',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Chủ shop',\n            dataIndex: 'owner',\n            align: 'center',\n            key: 'owner',\n            render: (owner: any) => {\n                if (owner) {\n                    return (\n                        <>\n                            <Avatar src={owner.picture} icon={<UserOutlined />} alt={owner.name}>\n                                {owner.name}\n                            </Avatar>\n                            <div style={{ marginTop: 5 }}>{owner.name}</div>\n                        </>\n                    );\n                }\n\n                return <span>\"</span>;\n            },\n        },\n        {\n            title: 'SĐT',\n            dataIndex: 'phoneNo',\n            key: 'phoneNo',\n        },\n        {\n            title: 'Địa chỉ',\n            dataIndex: 'address',\n            key: 'address',\n            render: (address: any, record: any) => {\n                return `${address} - ${record.wardName} - ${record.districtName} - ${record.provinceName}`;\n            },\n        },\n        {\n            title: 'Ngày tạo',\n            dataIndex: 'createdAt',\n            key: 'createdAt',\n            sorter: true,\n            render: (createdAt: any) => moment(createdAt).format('DD/MM/YYYY'),\n        },\n        {\n            title: 'Chi Tiết',\n            key: 'createdAt',\n            render: (record: any) => <Action record={record} />,\n        },\n    ];\n\n    return (\n        <>\n            <InsaTable\n                loading={loading}\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n                isShowTotal\n                onChange={handleTableChange}\n                pagination={{\n                    total: stores.total || 0,\n                    showSizeChanger: false,\n                }}\n                name='Danh sách cửa hàng'\n                className='order-tbl hover'\n                hasDefaultColumn={false}\n                rowKey='_id'\n                headerExtend={\n                    <Row gutter={15} style={{ marginBottom: 15 }} align='middle'>\n                        <Col>Tìm kiếm</Col>\n                        <Col>\n                            <Search\n                                value={text}\n                                onChange={onChangeText}\n                                onSearch={onSearch}\n                                placeholder='Tìm kiếm'\n                            />\n                        </Col>\n\n                        <Col>\n                            <Button icon={<ReloadOutlined />} onClick={resetSearch}></Button>\n                        </Col>\n                    </Row>\n                }\n                onRow={(item: IStore) => {\n                    return {\n                        onClick: () => history.push(`/dashboard/shops/${item._id}`),\n                    };\n                }}\n            />\n        </>\n    );\n};\n\nexport default StoreTable;\n"]},"metadata":{},"sourceType":"module"}