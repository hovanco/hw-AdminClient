{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { pick } from 'lodash';\nimport storeApi from '../../../api/store-api';\nimport constants from '../../../constants';\nconst billingSlide = createSlice({\n  name: 'billing',\n  initialState: {\n    loading: true,\n    billings: {},\n    page: 1,\n    limit: 10,\n    search: '',\n    sort: 'createdAt',\n    direction: 'desc',\n    reset: false,\n    type: constants.ROOT\n  },\n  reducers: {\n    loadBillingsStart(state) {\n      state.loading = true;\n    },\n\n    loadBillingsSuccess(state, action) {\n      state.billings = action.payload;\n      state.loading = false;\n    },\n\n    loadBillingsFailed(state) {\n      state.loading = false;\n    },\n\n    updateSort(state, action) {\n      state.page = action.payload.page;\n      state.limit = action.payload.limit;\n      state.sort = action.payload.sort;\n      state.direction = action.payload.direction;\n    },\n\n    updateType(state, action) {\n      state.type = action.payload;\n      state.page = 1;\n    },\n\n    searchBilling(state, action) {\n      state.search = action.payload;\n      state.page = 1;\n    },\n\n    resetBlillings(state, action) {\n      state.page = 1;\n      state.search = '';\n      state.type = constants.ROOT;\n      state.reset = !state.reset;\n    }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = billingSlide;\nexport const {\n  loadBillingsStart,\n  loadBillingsSuccess,\n  loadBillingsFailed,\n  updateSort,\n  searchBilling,\n  resetBlillings,\n  updateType\n} = actions;\nexport const loadBillings = () => async (dispatch, getState) => {\n  try {\n    const state = getState();\n    const data = pick(state.billing, ['page', 'limit', 'search', 'sort', 'direction', 'type']);\n    dispatch(loadBillingsStart());\n    const response = await storeApi.loadNewBillings(data);\n    dispatch(loadBillingsSuccess(response));\n  } catch (err) {\n    dispatch(loadBillingsFailed());\n  }\n};\nexport default reducer;","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/state/billingSlide.ts"],"names":["createSlice","pick","storeApi","constants","billingSlide","name","initialState","loading","billings","page","limit","search","sort","direction","reset","type","ROOT","reducers","loadBillingsStart","state","loadBillingsSuccess","action","payload","loadBillingsFailed","updateSort","updateType","searchBilling","resetBlillings","actions","reducer","loadBillings","dispatch","getState","data","billing","response","loadNewBillings","err"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { pick } from 'lodash';\nimport storeApi from '../../../api/store-api';\nimport constants from '../../../constants';\n\nconst billingSlide = createSlice({\n    name: 'billing',\n    initialState: {\n        loading: true,\n        billings: {},\n        page: 1,\n        limit: 10,\n        search: '',\n        sort: 'createdAt',\n        direction: 'desc',\n        reset: false,\n        type: constants.ROOT,\n    },\n    reducers: {\n        loadBillingsStart(state) {\n            state.loading = true;\n        },\n        loadBillingsSuccess(state, action) {\n            state.billings = action.payload;\n            state.loading = false;\n        },\n        loadBillingsFailed(state) {\n            state.loading = false;\n        },\n        updateSort(state, action) {\n            state.page = action.payload.page;\n            state.limit = action.payload.limit;\n            state.sort = action.payload.sort;\n            state.direction = action.payload.direction;\n        },\n        updateType(state, action) {\n            state.type = action.payload;\n            state.page = 1;\n        },\n        searchBilling(state, action) {\n            state.search = action.payload;\n            state.page = 1;\n        },\n        resetBlillings(state, action) {\n            state.page = 1;\n            state.search = '';\n            state.type = constants.ROOT;\n            state.reset = !state.reset;\n        }\n    },\n});\n\nconst { actions, reducer } = billingSlide;\n\nexport const {\n    loadBillingsStart,\n    loadBillingsSuccess,\n    loadBillingsFailed,\n    updateSort,\n    searchBilling,\n    resetBlillings,\n    updateType\n} = actions;\n\nexport const loadBillings = () => async (dispatch: any, getState: any) => {\n    try {\n        const state = getState();\n        const data = pick(state.billing, ['page', 'limit', 'search', 'sort', 'direction', 'type', ]);\n        dispatch(loadBillingsStart());\n        const response = await storeApi.loadNewBillings(data);\n\n        dispatch(loadBillingsSuccess(response));\n    } catch (err) {\n        dispatch(loadBillingsFailed());\n    }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}