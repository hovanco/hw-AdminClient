{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/fanpage-table.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Table, Avatar } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { updateSort } from '../state/fanpageSlide'; // const LIMIT = 10;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'STT',\n  dataIndex: 'index',\n  key: 'index',\n  align: 'center'\n}, {\n  title: 'Avatar',\n  dataIndex: 'picture',\n  align: 'center',\n  key: 'picture',\n  sorter: true,\n  render: picture => /*#__PURE__*/_jsxDEV(Avatar, {\n    src: picture,\n    icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 41\n    }, this),\n    alt: picture,\n    children: picture\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this)\n}, {\n  title: 'Tên Fanpage',\n  dataIndex: 'name',\n  align: 'center',\n  key: 'name',\n  sorter: true,\n  render: name => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 5\n    },\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 27\n  }, this)\n}, {\n  title: 'ID Store',\n  dataIndex: 'storeId',\n  key: 'storeId',\n  sorter: true\n}, {\n  title: 'Hoạt động',\n  dataIndex: 'active',\n  sorter: true,\n  key: 'active',\n  render: active => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 5,\n        color: active ? '#f0564a' : '#c2c5cb'\n      },\n      children: active ? 'Đang hoạt động' : 'Ngừng hoạt động'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  }\n}, {\n  title: 'Ngày tạo',\n  dataIndex: 'createdAt',\n  key: 'createdAt',\n  sorter: true,\n  render: createdAt => moment(createdAt).format('DD/MM/YYYY')\n}];\n\nconst FanpageTable = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.fanpage.loading);\n  const pages = useSelector(state => state.fanpage.fanpage.pages);\n  const total = useSelector(state => state.fanpage.fanpage.total);\n  const page = useSelector(state => state.fanpage.page);\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    const direction = sorter.order === 'ascend' ? 'asc' : sorter.order;\n    const data = {\n      page: pagination.current,\n      limit: pagination.pageSize,\n      sort: sorter.field,\n      direction\n    };\n    dispatch(updateSort(data));\n  };\n\n  const dataSource = (pages || []).map((store, index) => ({ ...store,\n    index: (page - 1) * 10 + index + 1\n  }));\n\n  const onChangePage = (page, pageSize) => {\n    handleTableChange({\n      current: page,\n      pageSize\n    }, {}, {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    bordered: true,\n    loading: loading,\n    dataSource: dataSource,\n    columns: columns,\n    rowKey: \"_id\",\n    onChange: handleTableChange,\n    pagination: {\n      onChange: onChangePage,\n      total,\n      showSizeChanger: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FanpageTable, \"qhL/xBk75iO9uVmQ23SQvU8bc2M=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = FanpageTable;\nexport default FanpageTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FanpageTable\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/fanpage-table.tsx"],"names":["React","UserOutlined","Table","Avatar","useSelector","useDispatch","moment","updateSort","columns","title","dataIndex","key","align","sorter","render","picture","name","marginTop","active","color","createdAt","format","FanpageTable","dispatch","loading","state","fanpage","pages","total","page","handleTableChange","pagination","filters","direction","order","data","current","limit","pageSize","sort","field","dataSource","map","store","index","onChangePage","onChange","showSizeChanger"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Table, Avatar } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { ColumnsType } from 'antd/lib/table';\nimport { updateSort } from '../state/fanpageSlide';\n\n// const LIMIT = 10;\n\nconst columns: ColumnsType<[]> = [\n    { title: 'STT', dataIndex: 'index', key: 'index', align: 'center' },\n    {\n        title: 'Avatar',\n        dataIndex: 'picture',\n        align: 'center',\n        key: 'picture',\n        sorter: true,\n        render: (picture) => (\n            <Avatar src={picture} icon={<UserOutlined />} alt={picture}>\n                {picture}\n            </Avatar>\n        ),\n    },\n    {\n        title: 'Tên Fanpage',\n        dataIndex: 'name',\n        align: 'center',\n        key: 'name',\n        sorter: true,\n        render: (name) => <div style={{ marginTop: 5 }}>{name}</div>,\n    },\n    {\n        title: 'ID Store',\n        dataIndex: 'storeId',\n        key: 'storeId',\n        sorter: true,\n    },\n    {\n        title: 'Hoạt động',\n        dataIndex: 'active',\n        sorter: true,\n        key: 'active',\n        render: (active: any) => {\n            return (\n                <div style={{ marginTop: 5, color: active ? '#f0564a' : '#c2c5cb' }}>\n                    {active ? 'Đang hoạt động' : 'Ngừng hoạt động'}\n                </div>\n            );\n        },\n    },\n    {\n        title: 'Ngày tạo',\n        dataIndex: 'createdAt',\n        key: 'createdAt',\n        sorter: true,\n        render: (createdAt: any) => moment(createdAt).format('DD/MM/YYYY'),\n    },\n];\n\nconst FanpageTable = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector((state: any) => state.fanpage.loading);\n    const pages = useSelector((state: any) => state.fanpage.fanpage.pages);\n    const total = useSelector((state: any) => state.fanpage.fanpage.total);\n    const page = useSelector((state: any) => state.fanpage.page);\n\n    const handleTableChange = (pagination: any, filters: any, sorter: any) => {\n        const direction = sorter.order === 'ascend' ? 'asc' : sorter.order;\n\n        const data = {\n            page: pagination.current,\n            limit: pagination.pageSize,\n            sort: sorter.field,\n            direction,\n        };\n\n        dispatch(updateSort(data));\n    };\n\n    const dataSource = (pages || []).map((store: any, index: number) => ({\n        ...store,\n        index: (page - 1) * 10 + index + 1,\n    }));\n\n    const onChangePage = (page: number, pageSize?: number | undefined) => {\n        handleTableChange({ current: page, pageSize }, {}, {});\n    };\n\n    return (\n        <Table\n            bordered\n            loading={loading}\n            dataSource={dataSource}\n            columns={columns}\n            rowKey='_id'\n            onChange={handleTableChange}\n            pagination={{\n                onChange: onChangePage,\n                total,\n                showSizeChanger: false,\n            }}\n        />\n    );\n};\n\nexport default FanpageTable;\n"]},"metadata":{},"sourceType":"module"}