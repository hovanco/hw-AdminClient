{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/components/select-package/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { CaretDownFilled } from '@ant-design/icons';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { map } from 'lodash';\nimport React, { useEffect, useState } from 'react';\nimport constants, { AliasPackage, ColorPackage, EBillingPackageType } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectPackage = ({\n  type,\n  onSelectType\n}) => {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n  const [key, setKey] = useState(constants.ROOT);\n  const {\n    Omni,\n    Pos,\n    Facebook\n  } = EBillingPackageType;\n  const packages = [Omni, Pos, Facebook];\n  useEffect(() => {\n    setKey(type);\n  }, [type]);\n\n  const onClickSelectPackage = ({\n    key\n  }) => {\n    setKey(key);\n    onSelectType(key);\n    setVisible(false);\n  };\n\n  const overlay = /*#__PURE__*/_jsxDEV(Menu, {\n    onClick: onClickSelectPackage,\n    selectedKeys: [`${key}`],\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: \"T\\u1EA5t c\\u1EA3\"\n    }, constants.ROOT, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), map(packages, item => /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: ColorPackage[item]\n        },\n        children: AliasPackage[item]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, item, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    overlay: overlay,\n    trigger: ['click'],\n    visible: visible,\n    onVisibleChange: value => {\n      setVisible(value);\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: ColorPackage[+key]\n        },\n        children: AliasPackage[+key] || 'Tất cả'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CaretDownFilled, {\n        style: {\n          fontSize: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectPackage, \"WqXWJoj87M67dAj9yXIJfhBZXFc=\");\n\n_c = SelectPackage;\nSelectPackage.defaultProps = {\n  type: constants.ROOT,\n  onSelectType: () => {}\n};\nexport default SelectPackage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectPackage\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/components/select-package/index.tsx"],"names":["CaretDownFilled","Button","Dropdown","Menu","map","React","useEffect","useState","constants","AliasPackage","ColorPackage","EBillingPackageType","SelectPackage","type","onSelectType","visible","setVisible","key","setKey","ROOT","Omni","Pos","Facebook","packages","onClickSelectPackage","overlay","item","color","value","fontSize","defaultProps"],"mappings":"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","sourcesContent":["import { CaretDownFilled } from '@ant-design/icons';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { map } from 'lodash';\nimport React, { FC, useEffect, useState } from 'react';\nimport constants, { AliasPackage, ColorPackage, EBillingPackageType } from '../../constants';\n\ninterface Props {\n    onSelectType: (type: number) => void;\n    type: string;\n}\n\nconst SelectPackage: FC<Props> = ({ type, onSelectType }) => {\n    const [visible, setVisible] = useState<boolean>(false);\n    const [key, setKey] = useState<string>(constants.ROOT);\n    const { Omni, Pos, Facebook } = EBillingPackageType;\n    const packages = [Omni, Pos, Facebook];\n\n    useEffect(() => {\n        setKey(type);\n    }, [type]);\n\n    const onClickSelectPackage = ({ key }: any): void => {\n        setKey(key);\n        onSelectType(key);\n        setVisible(false);\n    }\n\n    const overlay = (\n        <Menu onClick={onClickSelectPackage} selectedKeys={[`${key}`]}>\n            <Menu.Item key={constants.ROOT} >Tất cả</Menu.Item>\n            {map(packages, (item) =>\n                <Menu.Item key={item}>\n                    <span style={{ color: ColorPackage[item] }}>\n                        {AliasPackage[item]}\n                    </span>\n                </Menu.Item>\n            )}\n        </Menu>\n    );\n\n    return (\n        <Dropdown\n            overlay={overlay}\n            trigger={['click']}\n            visible={visible}\n            onVisibleChange={(value) => {\n                setVisible(value);\n            }}\n        >\n            <Button>\n                <span style={{ color: ColorPackage[+key] }}>\n                    {AliasPackage[+key] || 'Tất cả'}\n                </span>\n                <CaretDownFilled style={{ fontSize: 12 }} />\n            </Button>\n        </Dropdown>\n    )\n};\n\nSelectPackage.defaultProps = {\n    type: constants.ROOT,\n    onSelectType: () => { },\n}\n\nexport default SelectPackage;"]},"metadata":{},"sourceType":"module"}