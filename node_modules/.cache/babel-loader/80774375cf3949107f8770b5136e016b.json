{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/context.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialContext = {\n  collapsed: false,\n  setCollapsed: collapsed => collapsed\n};\nconst Context = /*#__PURE__*/createContext(initialContext);\n\nconst ProviderLayout = ({\n  children\n}) => {\n  _s();\n\n  const [collapsed, setCollapsed] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      collapsed,\n      setCollapsed\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProviderLayout, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n\n_c = ProviderLayout;\n\nconst useLayoutDasboard = () => {\n  _s2();\n\n  const value = useContext(Context);\n  const {\n    collapsed,\n    setCollapsed\n  } = value;\n\n  const toggleCollapsed = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return {\n    collapsed,\n    toggleCollapsed\n  };\n};\n\n_s2(useLayoutDasboard, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\n\nexport { ProviderLayout, useLayoutDasboard };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderLayout\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/layout/dashboard-layout/context.tsx"],"names":["React","createContext","useState","useContext","initialContext","collapsed","setCollapsed","Context","ProviderLayout","children","useLayoutDasboard","value","toggleCollapsed"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA0CC,QAA1C,EAAoDC,UAApD,QAAsE,OAAtE;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,YAAY,EAAGD,SAAD,IAA6BA;AAFxB,CAAvB;AAKA,MAAME,OAAO,gBAAGN,aAAa,CAACG,cAAD,CAA7B;;AAEA,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AAC9D,QAAM,CAACJ,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAU,KAAV,CAA1C;AAEA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAzB;AAAA,cAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAJD;;GAAMD,c;;KAAAA,c;;AAMN,MAAME,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAMC,KAAK,GAAGR,UAAU,CAACI,OAAD,CAAxB;AAEA,QAAM;AAAEF,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BK,KAApC;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC1BN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH,GAFD;;AAIA,SAAO;AAAEA,IAAAA,SAAF;AAAaO,IAAAA;AAAb,GAAP;AACH,CAVD;;IAAMF,iB;;AAYN,SAASF,cAAT,EAAyBE,iBAAzB","sourcesContent":["import React, { createContext, ReactNode, useState, useContext } from 'react';\n\nconst initialContext = {\n    collapsed: false,\n    setCollapsed: (collapsed: boolean): any => collapsed,\n};\n\nconst Context = createContext(initialContext);\n\nconst ProviderLayout = ({ children }: { children: ReactNode }) => {\n    const [collapsed, setCollapsed] = useState<boolean>(false);\n\n    return <Context.Provider value={{ collapsed, setCollapsed }}>{children}</Context.Provider>;\n};\n\nconst useLayoutDasboard = () => {\n    const value = useContext(Context);\n\n    const { collapsed, setCollapsed } = value;\n\n    const toggleCollapsed = () => {\n        setCollapsed(!collapsed);\n    };\n\n    return { collapsed, toggleCollapsed };\n};\n\nexport { ProviderLayout, useLayoutDasboard };\n"]},"metadata":{},"sourceType":"module"}