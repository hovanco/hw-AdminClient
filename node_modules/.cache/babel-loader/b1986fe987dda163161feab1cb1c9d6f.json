{"ast":null,"code":"var _jsxFileName = \"/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/store-table.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Table, Avatar } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { updateSort } from '../state/storeSlide';\nimport Action from './stores/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StoreTable = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.store.loading);\n  const stores = useSelector(state => state.store.stores);\n  const page = useSelector(state => state.store.page);\n\n  const handleTableChange = (pagination, filters, sorter) => {\n    const data = {\n      page: pagination.current,\n      limit: pagination.pageSize,\n      sort: sorter.field,\n      direction: sorter.order\n    };\n    dispatch(updateSort(data));\n  };\n\n  const dataSource = (stores.data || []).map((store, index) => ({ ...store,\n    index: (page - 1) * 10 + index + 1\n  }));\n  const columns = [{\n    title: 'STT',\n    dataIndex: 'index',\n    key: 'index',\n    align: 'center'\n  }, {\n    title: 'Tên shop',\n    dataIndex: 'name',\n    key: 'name',\n    sorter: true\n  }, {\n    title: 'Chủ shop',\n    dataIndex: 'owner',\n    align: 'center',\n    key: 'owner',\n    render: owner => {\n      if (owner) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: owner.picture,\n            icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 63\n            }, this),\n            alt: owner.name,\n            children: owner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 5\n            },\n            children: owner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    title: 'SĐT',\n    dataIndex: 'phoneNo',\n    sorter: true,\n    key: 'phoneNo'\n  }, {\n    title: 'Địa chỉ',\n    dataIndex: 'address',\n    sorter: true,\n    key: 'address',\n    render: (address, record) => {\n      return `${address} - ${record.wardName} - ${record.districtName} - ${record.provinceName}`;\n    }\n  }, {\n    title: 'Ngày tạo',\n    dataIndex: 'createAt',\n    key: 'createAt',\n    sorter: true,\n    render: createAt => moment(createAt).format('DD/MM/YYYY')\n  }, {\n    title: 'Chi Tiết',\n    key: 'createAt',\n    render: record => /*#__PURE__*/_jsxDEV(Action, {\n      record: record\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 38\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    bordered: true,\n    loading: loading,\n    dataSource: dataSource,\n    columns: columns,\n    rowKey: \"_id\",\n    onChange: handleTableChange,\n    pagination: {\n      total: stores.total || 0,\n      showSizeChanger: false\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StoreTable, \"CTZZzkTehvmkh31NGeOsZBG8JLc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = StoreTable;\nexport default StoreTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreTable\");","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/features/dashboard/components/store-table.tsx"],"names":["React","UserOutlined","Table","Avatar","useSelector","useDispatch","moment","updateSort","Action","StoreTable","dispatch","loading","state","store","stores","page","handleTableChange","pagination","filters","sorter","data","current","limit","pageSize","sort","field","direction","order","dataSource","map","index","columns","title","dataIndex","key","align","render","owner","picture","name","marginTop","address","record","wardName","districtName","provinceName","createAt","format","total","showSizeChanger"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Table, Avatar } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { ColumnsType } from 'antd/lib/table';\nimport { updateSort } from '../state/storeSlide';\nimport Action from './stores/action';\n\nconst StoreTable = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector((state: any) => state.store.loading);\n    const stores = useSelector((state: any) => state.store.stores);\n    const page = useSelector((state: any) => state.store.page);\n\n    const handleTableChange = (pagination: any, filters: any, sorter: any) => {\n        const data = {\n            page: pagination.current,\n            limit: pagination.pageSize,\n            sort: sorter.field,\n            direction: sorter.order,\n        };\n\n        dispatch(updateSort(data));\n    };\n\n    const dataSource = (stores.data || []).map((store: any, index: number) => ({\n        ...store,\n        index: (page - 1) * 10 + index + 1,\n    }));\n\n    const columns: ColumnsType<[]> = [\n        { title: 'STT', dataIndex: 'index', key: 'index', align: 'center' },\n        {\n            title: 'Tên shop',\n            dataIndex: 'name',\n            key: 'name',\n            sorter: true,\n        },\n        {\n            title: 'Chủ shop',\n            dataIndex: 'owner',\n            align: 'center',\n            key: 'owner',\n            render: (owner: any) => {\n                if (owner) {\n                    return (\n                        <>\n                            <Avatar src={owner.picture} icon={<UserOutlined />} alt={owner.name}>\n                                {owner.name}\n                            </Avatar>\n                            <div style={{ marginTop: 5 }}>{owner.name}</div>\n                        </>\n                    );\n                }\n\n                return <span>\"</span>;\n            },\n        },\n        {\n            title: 'SĐT',\n            dataIndex: 'phoneNo',\n            sorter: true,\n            key: 'phoneNo',\n        },\n        {\n            title: 'Địa chỉ',\n            dataIndex: 'address',\n            sorter: true,\n            key: 'address',\n            render: (address: any, record: any) => {\n                return `${address} - ${record.wardName} - ${record.districtName} - ${record.provinceName}`;\n            },\n        },\n        {\n            title: 'Ngày tạo',\n            dataIndex: 'createAt',\n            key: 'createAt',\n            sorter: true,\n            render: (createAt: any) => moment(createAt).format('DD/MM/YYYY'),\n        },\n        {\n            title: 'Chi Tiết',\n            key: 'createAt',\n            render: (record: any) => <Action record={record} />,\n        },\n    ];\n\n    return (\n        <Table\n            bordered\n            loading={loading}\n            dataSource={dataSource}\n            columns={columns}\n            rowKey='_id'\n            onChange={handleTableChange}\n            pagination={{\n                total: stores.total || 0,\n                showSizeChanger: false,\n            }}\n        />\n    );\n};\n\nexport default StoreTable;\n"]},"metadata":{},"sourceType":"module"}