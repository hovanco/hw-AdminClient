{"ast":null,"code":"import axios from './axios-client';\n\nasync function loadFanpage({\n  limit = 10,\n  page = 1,\n  name,\n  sort = 'createdAt',\n  direction = 'asc'\n}) {\n  const url = `/administrator/v1/fbpages`;\n  const params = {\n    limit,\n    page,\n    name,\n    sort,\n    direction\n  };\n  const response = await axios({\n    method: 'GET',\n    url,\n    params,\n    headers: {\n      'Cache-Control': 'no-cache'\n    }\n  });\n  return response;\n}\n\nasync function updateFanpageRequest({\n  expiredAt,\n  fanpageId\n}) {\n  const url = `/administrator/v1/fbpages/${fanpageId}`;\n  const data = {\n    expiredAt\n  };\n  const response = await axios({\n    method: 'PUT',\n    url,\n    data\n  });\n  return response;\n}\n\nasync function getFanPagesByStoreId({\n  storeId,\n  limit = 10,\n  page = 1,\n  sort = 'createdAt',\n  direction = 'desc'\n}) {\n  const url = `/administrator/v1/fbpages`;\n  const params = {\n    storeId,\n    limit,\n    page,\n    sort,\n    direction\n  };\n  const data = await axios({\n    method: 'GET',\n    url,\n    params,\n    headers: {\n      'Cache-Control': 'no-cache'\n    }\n  });\n  return data;\n}\n\nexport default {\n  loadFanpage,\n  updateFanpageRequest,\n  getFanPagesByStoreId\n};","map":{"version":3,"sources":["/Users/mac3/Desktop/workspace/AdminClient/src/api/fanpage-api.ts"],"names":["axios","loadFanpage","limit","page","name","sort","direction","url","params","response","method","headers","updateFanpageRequest","expiredAt","fanpageId","data","getFanPagesByStoreId","storeId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;AAEA,eAAeC,WAAf,CAA2B;AACvBC,EAAAA,KAAK,GAAG,EADe;AAEvBC,EAAAA,IAAI,GAAG,CAFgB;AAGvBC,EAAAA,IAHuB;AAIvBC,EAAAA,IAAI,GAAG,WAJgB;AAKvBC,EAAAA,SAAS,GAAG;AALW,CAA3B,EAYiB;AACb,QAAMC,GAAG,GAAI,2BAAb;AAEA,QAAMC,MAAM,GAAG;AACXN,IAAAA,KADW;AAEXC,IAAAA,IAFW;AAGXC,IAAAA,IAHW;AAIXC,IAAAA,IAJW;AAKXC,IAAAA;AALW,GAAf;AAQA,QAAMG,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,IAAAA,MAAM,EAAE,KADiB;AAEzBH,IAAAA,GAFyB;AAGzBC,IAAAA,MAHyB;AAIzBG,IAAAA,OAAO,EAAE;AACL,uBAAiB;AADZ;AAJgB,GAAD,CAA5B;AASA,SAAOF,QAAP;AACH;;AAED,eAAeG,oBAAf,CAAoC;AAChCC,EAAAA,SADgC;AAEhCC,EAAAA;AAFgC,CAApC,EAMiB;AACb,QAAMP,GAAG,GAAI,6BAA4BO,SAAU,EAAnD;AAEA,QAAMC,IAAI,GAAG;AACTF,IAAAA;AADS,GAAb;AAIA,QAAMJ,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACzBU,IAAAA,MAAM,EAAE,KADiB;AAEzBH,IAAAA,GAFyB;AAGzBQ,IAAAA;AAHyB,GAAD,CAA5B;AAKA,SAAON,QAAP;AACH;;AAED,eAAeO,oBAAf,CAAoC;AAChCC,EAAAA,OADgC;AAEhCf,EAAAA,KAAK,GAAG,EAFwB;AAGhCC,EAAAA,IAAI,GAAG,CAHyB;AAIhCE,EAAAA,IAAI,GAAG,WAJyB;AAKhCC,EAAAA,SAAS,GAAG;AALoB,CAApC,EAYiB;AACb,QAAMC,GAAG,GAAI,2BAAb;AAEA,QAAMC,MAAM,GAAG;AACXS,IAAAA,OADW;AAEXf,IAAAA,KAFW;AAGXC,IAAAA,IAHW;AAIXE,IAAAA,IAJW;AAKXC,IAAAA;AALW,GAAf;AAQA,QAAMS,IAAI,GAAG,MAAMf,KAAK,CAAC;AACrBU,IAAAA,MAAM,EAAE,KADa;AAErBH,IAAAA,GAFqB;AAGrBC,IAAAA,MAHqB;AAIrBG,IAAAA,OAAO,EAAE;AACL,uBAAiB;AADZ;AAJY,GAAD,CAAxB;AASA,SAAOI,IAAP;AACH;;AAED,eAAe;AACXd,EAAAA,WADW;AAEXW,EAAAA,oBAFW;AAGXI,EAAAA;AAHW,CAAf","sourcesContent":["import axios from './axios-client';\n\nasync function loadFanpage({\n    limit = 10,\n    page = 1,\n    name,\n    sort = 'createdAt',\n    direction = 'asc',\n}: {\n    limit?: number;\n    page?: number;\n    name?: number;\n    sort?: string;\n    direction?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages`;\n\n    const params = {\n        limit,\n        page,\n        name,\n        sort,\n        direction,\n    };\n\n    const response = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return response;\n}\n\nasync function updateFanpageRequest({\n    expiredAt,\n    fanpageId,\n}: {\n    expiredAt: string;\n    fanpageId: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages/${fanpageId}`;\n\n    const data = {\n        expiredAt,\n    };\n\n    const response = await axios({\n        method: 'PUT',\n        url,\n        data,\n    });\n    return response;\n}\n\nasync function getFanPagesByStoreId({\n    storeId,\n    limit = 10,\n    page = 1,\n    sort = 'createdAt',\n    direction = 'desc',\n}: {\n    storeId: string;\n    limit: number;\n    page: number;\n    sort?: string;\n    direction?: string;\n}): Promise<any> {\n    const url = `/administrator/v1/fbpages`;\n\n    const params = {\n        storeId,\n        limit,\n        page,\n        sort,\n        direction,\n    };\n\n    const data = await axios({\n        method: 'GET',\n        url,\n        params,\n        headers: {\n            'Cache-Control': 'no-cache',\n        }\n    });\n\n    return data;\n}\n\nexport default {\n    loadFanpage,\n    updateFanpageRequest,\n    getFanPagesByStoreId,\n};\n"]},"metadata":{},"sourceType":"module"}